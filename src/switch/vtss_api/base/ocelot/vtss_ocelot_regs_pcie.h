#ifndef _VTSS_OCELOT_REGS_PCIE_H_
#define _VTSS_OCELOT_REGS_PCIE_H_

//Copyright (c) 2004-2020 Microchip Technology Inc. and its subsidiaries.
//SPDX-License-Identifier: MIT

#include "vtss_ocelot_regs_common.h"

/*********************************************************************** 
 *
 * Target: \a PCIE
 *
 * PCIe Endpoint Configuration Space
 *
 ***********************************************************************/

/**
 * Register Group: \a PCIE:PCIE_TYPE0_HDR
 *
 * PCIe Header Type 0
 */


/** 
 * \brief Word offset 0
 *
 * \details
 * Register: \a PCIE:PCIE_TYPE0_HDR:DEVICE_ID_VENDOR_ID
 */
#define VTSS_PCIE_PCIE_TYPE0_HDR_DEVICE_ID_VENDOR_ID  VTSS_IOREG(VTSS_TO_PCIE_EP,0x0)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_DEVICE_ID_VENDOR_ID . PCI_TYPE0_DEVICE_ID
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_DEVICE_ID_VENDOR_ID_PCI_TYPE0_DEVICE_ID(x)  VTSS_ENCODE_BITFIELD(x,16,16)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_DEVICE_ID_VENDOR_ID_PCI_TYPE0_DEVICE_ID     VTSS_ENCODE_BITMASK(16,16)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_DEVICE_ID_VENDOR_ID_PCI_TYPE0_DEVICE_ID(x)  VTSS_EXTRACT_BITFIELD(x,16,16)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_DEVICE_ID_VENDOR_ID . PCI_TYPE0_VENDOR_ID
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_DEVICE_ID_VENDOR_ID_PCI_TYPE0_VENDOR_ID(x)  VTSS_ENCODE_BITFIELD(x,0,16)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_DEVICE_ID_VENDOR_ID_PCI_TYPE0_VENDOR_ID     VTSS_ENCODE_BITMASK(0,16)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_DEVICE_ID_VENDOR_ID_PCI_TYPE0_VENDOR_ID(x)  VTSS_EXTRACT_BITFIELD(x,0,16)


/** 
 * \brief Word offset 1
 *
 * \details
 * Register: \a PCIE:PCIE_TYPE0_HDR:STATUS_COMMAND
 */
#define VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . DETECTED_PARITY_ERR
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_DETECTED_PARITY_ERR(x)  VTSS_ENCODE_BITFIELD(!!(x),31,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_DETECTED_PARITY_ERR  VTSS_BIT(31)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_DETECTED_PARITY_ERR(x)  VTSS_EXTRACT_BITFIELD(x,31,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . SIGNALED_SYS_ERR
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_SIGNALED_SYS_ERR(x)  VTSS_ENCODE_BITFIELD(!!(x),30,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_SIGNALED_SYS_ERR  VTSS_BIT(30)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_SIGNALED_SYS_ERR(x)  VTSS_EXTRACT_BITFIELD(x,30,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . RCVD_MASTER_ABORT
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_RCVD_MASTER_ABORT(x)  VTSS_ENCODE_BITFIELD(!!(x),29,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_RCVD_MASTER_ABORT  VTSS_BIT(29)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_RCVD_MASTER_ABORT(x)  VTSS_EXTRACT_BITFIELD(x,29,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . RCVD_TARGET_ABORT
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_RCVD_TARGET_ABORT(x)  VTSS_ENCODE_BITFIELD(!!(x),28,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_RCVD_TARGET_ABORT  VTSS_BIT(28)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_RCVD_TARGET_ABORT(x)  VTSS_EXTRACT_BITFIELD(x,28,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . SIGNALED_TARGET_ABORT
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_SIGNALED_TARGET_ABORT(x)  VTSS_ENCODE_BITFIELD(!!(x),27,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_SIGNALED_TARGET_ABORT  VTSS_BIT(27)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_SIGNALED_TARGET_ABORT(x)  VTSS_EXTRACT_BITFIELD(x,27,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . DEV_SEL_TIMING
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_DEV_SEL_TIMING(x)  VTSS_ENCODE_BITFIELD(x,25,2)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_DEV_SEL_TIMING     VTSS_ENCODE_BITMASK(25,2)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_DEV_SEL_TIMING(x)  VTSS_EXTRACT_BITFIELD(x,25,2)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . MASTER_DPE
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_MASTER_DPE(x)  VTSS_ENCODE_BITFIELD(!!(x),24,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_MASTER_DPE  VTSS_BIT(24)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_MASTER_DPE(x)  VTSS_EXTRACT_BITFIELD(x,24,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . FAST_B2B_CAP
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_FAST_B2B_CAP(x)  VTSS_ENCODE_BITFIELD(!!(x),23,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_FAST_B2B_CAP  VTSS_BIT(23)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_FAST_B2B_CAP(x)  VTSS_EXTRACT_BITFIELD(x,23,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . FAST_66MHZ_CAP
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_FAST_66MHZ_CAP(x)  VTSS_ENCODE_BITFIELD(!!(x),21,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_FAST_66MHZ_CAP  VTSS_BIT(21)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_FAST_66MHZ_CAP(x)  VTSS_EXTRACT_BITFIELD(x,21,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . CAP_LIST
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_CAP_LIST(x)  VTSS_ENCODE_BITFIELD(!!(x),20,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_CAP_LIST  VTSS_BIT(20)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_CAP_LIST(x)  VTSS_EXTRACT_BITFIELD(x,20,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . INT_STATUS
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_INT_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),19,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_INT_STATUS  VTSS_BIT(19)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_INT_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,19,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . PCI_TYPE_RESERV
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE_RESERV(x)  VTSS_ENCODE_BITFIELD(x,11,6)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE_RESERV     VTSS_ENCODE_BITMASK(11,6)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE_RESERV(x)  VTSS_EXTRACT_BITFIELD(x,11,6)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . PCI_TYPE0_INT_EN
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_INT_EN(x)  VTSS_ENCODE_BITFIELD(!!(x),10,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_INT_EN  VTSS_BIT(10)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_INT_EN(x)  VTSS_EXTRACT_BITFIELD(x,10,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . PCI_TYPE0_SERREN
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_SERREN(x)  VTSS_ENCODE_BITFIELD(!!(x),8,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_SERREN  VTSS_BIT(8)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_SERREN(x)  VTSS_EXTRACT_BITFIELD(x,8,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . PCI_TYPE_IDSEL_STEPPING
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE_IDSEL_STEPPING(x)  VTSS_ENCODE_BITFIELD(!!(x),7,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE_IDSEL_STEPPING  VTSS_BIT(7)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE_IDSEL_STEPPING(x)  VTSS_EXTRACT_BITFIELD(x,7,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . PCI_TYPE0_PARITY_ERR_EN
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_PARITY_ERR_EN(x)  VTSS_ENCODE_BITFIELD(!!(x),6,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_PARITY_ERR_EN  VTSS_BIT(6)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_PARITY_ERR_EN(x)  VTSS_EXTRACT_BITFIELD(x,6,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . PCI_TYPE_VGA_PALETTE_SNOOP
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE_VGA_PALETTE_SNOOP(x)  VTSS_ENCODE_BITFIELD(!!(x),5,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE_VGA_PALETTE_SNOOP  VTSS_BIT(5)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE_VGA_PALETTE_SNOOP(x)  VTSS_EXTRACT_BITFIELD(x,5,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . PCI_TYPE_MWI_ENABLE
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE_MWI_ENABLE(x)  VTSS_ENCODE_BITFIELD(!!(x),4,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE_MWI_ENABLE  VTSS_BIT(4)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE_MWI_ENABLE(x)  VTSS_EXTRACT_BITFIELD(x,4,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . PCI_TYPE0_SPECIAL_CYCLE_OPERATION
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_SPECIAL_CYCLE_OPERATION(x)  VTSS_ENCODE_BITFIELD(!!(x),3,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_SPECIAL_CYCLE_OPERATION  VTSS_BIT(3)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_SPECIAL_CYCLE_OPERATION(x)  VTSS_EXTRACT_BITFIELD(x,3,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . PCI_TYPE0_BUS_MASTER_EN
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_BUS_MASTER_EN(x)  VTSS_ENCODE_BITFIELD(!!(x),2,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_BUS_MASTER_EN  VTSS_BIT(2)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_BUS_MASTER_EN(x)  VTSS_EXTRACT_BITFIELD(x,2,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . PCI_TYPE0_MEM_SPACE_EN
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_MEM_SPACE_EN(x)  VTSS_ENCODE_BITFIELD(!!(x),1,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_MEM_SPACE_EN  VTSS_BIT(1)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_MEM_SPACE_EN(x)  VTSS_EXTRACT_BITFIELD(x,1,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND . PCI_TYPE0_IO_EN
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_IO_EN(x)  VTSS_ENCODE_BITFIELD(!!(x),0,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_IO_EN  VTSS_BIT(0)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_STATUS_COMMAND_PCI_TYPE0_IO_EN(x)  VTSS_EXTRACT_BITFIELD(x,0,1)


/** 
 * \brief Word offset 2
 *
 * \details
 * Register: \a PCIE:PCIE_TYPE0_HDR:CLASS_CODE_REVISION_ID
 */
#define VTSS_PCIE_PCIE_TYPE0_HDR_CLASS_CODE_REVISION_ID  VTSS_IOREG(VTSS_TO_PCIE_EP,0x2)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_CLASS_CODE_REVISION_ID . BASE_CLASS_CODE
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_CLASS_CODE_REVISION_ID_BASE_CLASS_CODE(x)  VTSS_ENCODE_BITFIELD(x,24,8)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_CLASS_CODE_REVISION_ID_BASE_CLASS_CODE     VTSS_ENCODE_BITMASK(24,8)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_CLASS_CODE_REVISION_ID_BASE_CLASS_CODE(x)  VTSS_EXTRACT_BITFIELD(x,24,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_CLASS_CODE_REVISION_ID . SUBCLASS_CODE
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_CLASS_CODE_REVISION_ID_SUBCLASS_CODE(x)  VTSS_ENCODE_BITFIELD(x,16,8)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_CLASS_CODE_REVISION_ID_SUBCLASS_CODE     VTSS_ENCODE_BITMASK(16,8)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_CLASS_CODE_REVISION_ID_SUBCLASS_CODE(x)  VTSS_EXTRACT_BITFIELD(x,16,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_CLASS_CODE_REVISION_ID . PROGRAM_INTERFACE
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_CLASS_CODE_REVISION_ID_PROGRAM_INTERFACE(x)  VTSS_ENCODE_BITFIELD(x,8,8)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_CLASS_CODE_REVISION_ID_PROGRAM_INTERFACE     VTSS_ENCODE_BITMASK(8,8)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_CLASS_CODE_REVISION_ID_PROGRAM_INTERFACE(x)  VTSS_EXTRACT_BITFIELD(x,8,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_CLASS_CODE_REVISION_ID . REVISION_ID
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_CLASS_CODE_REVISION_ID_REVISION_ID(x)  VTSS_ENCODE_BITFIELD(x,0,8)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_CLASS_CODE_REVISION_ID_REVISION_ID     VTSS_ENCODE_BITMASK(0,8)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_CLASS_CODE_REVISION_ID_REVISION_ID(x)  VTSS_EXTRACT_BITFIELD(x,0,8)


/** 
 * \brief Word offset 3
 *
 * \details
 * Register: \a PCIE:PCIE_TYPE0_HDR:BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE
 */
#define VTSS_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE  VTSS_IOREG(VTSS_TO_PCIE_EP,0x3)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE . BIST
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE_BIST(x)  VTSS_ENCODE_BITFIELD(x,24,8)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE_BIST     VTSS_ENCODE_BITMASK(24,8)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE_BIST(x)  VTSS_EXTRACT_BITFIELD(x,24,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE . MULTI_FUNC
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE_MULTI_FUNC(x)  VTSS_ENCODE_BITFIELD(!!(x),23,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE_MULTI_FUNC  VTSS_BIT(23)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE_MULTI_FUNC(x)  VTSS_EXTRACT_BITFIELD(x,23,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE . HEADER_TYPE
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE_HEADER_TYPE(x)  VTSS_ENCODE_BITFIELD(x,16,7)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE_HEADER_TYPE     VTSS_ENCODE_BITMASK(16,7)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE_HEADER_TYPE(x)  VTSS_EXTRACT_BITFIELD(x,16,7)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE . LATENCY_MASTER_TIMER
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE_LATENCY_MASTER_TIMER(x)  VTSS_ENCODE_BITFIELD(x,8,8)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE_LATENCY_MASTER_TIMER     VTSS_ENCODE_BITMASK(8,8)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE_LATENCY_MASTER_TIMER(x)  VTSS_EXTRACT_BITFIELD(x,8,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE . CACHE_LINE_SIZE
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE_CACHE_LINE_SIZE(x)  VTSS_ENCODE_BITFIELD(x,0,8)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE_CACHE_LINE_SIZE     VTSS_ENCODE_BITMASK(0,8)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BIST_HEADER_TYPE_LATENCY_CACHE_LINE_SIZE_CACHE_LINE_SIZE(x)  VTSS_EXTRACT_BITFIELD(x,0,8)


/** 
 * \brief Word offset 4
 *
 * \details
 * Register: \a PCIE:PCIE_TYPE0_HDR:BAR0
 */
#define VTSS_PCIE_PCIE_TYPE0_HDR_BAR0        VTSS_IOREG(VTSS_TO_PCIE_EP,0x4)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR0 . BAR0_START
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR0_BAR0_START(x)  VTSS_ENCODE_BITFIELD(x,4,28)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR0_BAR0_START     VTSS_ENCODE_BITMASK(4,28)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR0_BAR0_START(x)  VTSS_EXTRACT_BITFIELD(x,4,28)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR0 . BAR0_PREFETCH
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR0_BAR0_PREFETCH(x)  VTSS_ENCODE_BITFIELD(!!(x),3,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR0_BAR0_PREFETCH  VTSS_BIT(3)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR0_BAR0_PREFETCH(x)  VTSS_EXTRACT_BITFIELD(x,3,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR0 . BAR0_TYPE
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR0_BAR0_TYPE(x)  VTSS_ENCODE_BITFIELD(x,1,2)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR0_BAR0_TYPE     VTSS_ENCODE_BITMASK(1,2)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR0_BAR0_TYPE(x)  VTSS_EXTRACT_BITFIELD(x,1,2)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR0 . BAR0_MEM_IO
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR0_BAR0_MEM_IO(x)  VTSS_ENCODE_BITFIELD(!!(x),0,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR0_BAR0_MEM_IO  VTSS_BIT(0)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR0_BAR0_MEM_IO(x)  VTSS_EXTRACT_BITFIELD(x,0,1)


/** 
 * \brief Word offset 5
 *
 * \details
 * Register: \a PCIE:PCIE_TYPE0_HDR:BAR1
 */
#define VTSS_PCIE_PCIE_TYPE0_HDR_BAR1        VTSS_IOREG(VTSS_TO_PCIE_EP,0x5)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR1 . BAR1_START
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR1_BAR1_START(x)  VTSS_ENCODE_BITFIELD(x,4,28)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR1_BAR1_START     VTSS_ENCODE_BITMASK(4,28)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR1_BAR1_START(x)  VTSS_EXTRACT_BITFIELD(x,4,28)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR1 . BAR1_PREFETCH
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR1_BAR1_PREFETCH(x)  VTSS_ENCODE_BITFIELD(!!(x),3,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR1_BAR1_PREFETCH  VTSS_BIT(3)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR1_BAR1_PREFETCH(x)  VTSS_EXTRACT_BITFIELD(x,3,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR1 . BAR1_TYPE
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR1_BAR1_TYPE(x)  VTSS_ENCODE_BITFIELD(x,1,2)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR1_BAR1_TYPE     VTSS_ENCODE_BITMASK(1,2)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR1_BAR1_TYPE(x)  VTSS_EXTRACT_BITFIELD(x,1,2)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR1 . BAR1_MEM_IO
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR1_BAR1_MEM_IO(x)  VTSS_ENCODE_BITFIELD(!!(x),0,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR1_BAR1_MEM_IO  VTSS_BIT(0)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR1_BAR1_MEM_IO(x)  VTSS_EXTRACT_BITFIELD(x,0,1)


/** 
 * \brief Word offset 6
 *
 * \details
 * Register: \a PCIE:PCIE_TYPE0_HDR:BAR2
 */
#define VTSS_PCIE_PCIE_TYPE0_HDR_BAR2        VTSS_IOREG(VTSS_TO_PCIE_EP,0x6)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR2 . BAR2_START
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR2_BAR2_START(x)  VTSS_ENCODE_BITFIELD(x,4,28)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR2_BAR2_START     VTSS_ENCODE_BITMASK(4,28)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR2_BAR2_START(x)  VTSS_EXTRACT_BITFIELD(x,4,28)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR2 . BAR2_PREFETCH
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR2_BAR2_PREFETCH(x)  VTSS_ENCODE_BITFIELD(!!(x),3,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR2_BAR2_PREFETCH  VTSS_BIT(3)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR2_BAR2_PREFETCH(x)  VTSS_EXTRACT_BITFIELD(x,3,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR2 . BAR2_TYPE
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR2_BAR2_TYPE(x)  VTSS_ENCODE_BITFIELD(x,1,2)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR2_BAR2_TYPE     VTSS_ENCODE_BITMASK(1,2)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR2_BAR2_TYPE(x)  VTSS_EXTRACT_BITFIELD(x,1,2)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR2 . BAR2_MEM_IO
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR2_BAR2_MEM_IO(x)  VTSS_ENCODE_BITFIELD(!!(x),0,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR2_BAR2_MEM_IO  VTSS_BIT(0)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR2_BAR2_MEM_IO(x)  VTSS_EXTRACT_BITFIELD(x,0,1)


/** 
 * \brief Word offset 7
 *
 * \details
 * Register: \a PCIE:PCIE_TYPE0_HDR:BAR3
 */
#define VTSS_PCIE_PCIE_TYPE0_HDR_BAR3        VTSS_IOREG(VTSS_TO_PCIE_EP,0x7)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR3 . BAR3_START
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR3_BAR3_START(x)  VTSS_ENCODE_BITFIELD(x,4,28)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR3_BAR3_START     VTSS_ENCODE_BITMASK(4,28)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR3_BAR3_START(x)  VTSS_EXTRACT_BITFIELD(x,4,28)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR3 . BAR3_PREFETCH
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR3_BAR3_PREFETCH(x)  VTSS_ENCODE_BITFIELD(!!(x),3,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR3_BAR3_PREFETCH  VTSS_BIT(3)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR3_BAR3_PREFETCH(x)  VTSS_EXTRACT_BITFIELD(x,3,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR3 . BAR3_TYPE
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR3_BAR3_TYPE(x)  VTSS_ENCODE_BITFIELD(x,1,2)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR3_BAR3_TYPE     VTSS_ENCODE_BITMASK(1,2)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR3_BAR3_TYPE(x)  VTSS_EXTRACT_BITFIELD(x,1,2)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR3 . BAR3_MEM_IO
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR3_BAR3_MEM_IO(x)  VTSS_ENCODE_BITFIELD(!!(x),0,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR3_BAR3_MEM_IO  VTSS_BIT(0)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR3_BAR3_MEM_IO(x)  VTSS_EXTRACT_BITFIELD(x,0,1)


/** 
 * \brief Word offset 8
 *
 * \details
 * Register: \a PCIE:PCIE_TYPE0_HDR:BAR4
 */
#define VTSS_PCIE_PCIE_TYPE0_HDR_BAR4        VTSS_IOREG(VTSS_TO_PCIE_EP,0x8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR4 . BAR4_START
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR4_BAR4_START(x)  VTSS_ENCODE_BITFIELD(x,4,28)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR4_BAR4_START     VTSS_ENCODE_BITMASK(4,28)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR4_BAR4_START(x)  VTSS_EXTRACT_BITFIELD(x,4,28)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR4 . BAR4_PREFETCH
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR4_BAR4_PREFETCH(x)  VTSS_ENCODE_BITFIELD(!!(x),3,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR4_BAR4_PREFETCH  VTSS_BIT(3)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR4_BAR4_PREFETCH(x)  VTSS_EXTRACT_BITFIELD(x,3,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR4 . BAR4_TYPE
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR4_BAR4_TYPE(x)  VTSS_ENCODE_BITFIELD(x,1,2)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR4_BAR4_TYPE     VTSS_ENCODE_BITMASK(1,2)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR4_BAR4_TYPE(x)  VTSS_EXTRACT_BITFIELD(x,1,2)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR4 . BAR4_MEM_IO
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR4_BAR4_MEM_IO(x)  VTSS_ENCODE_BITFIELD(!!(x),0,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR4_BAR4_MEM_IO  VTSS_BIT(0)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR4_BAR4_MEM_IO(x)  VTSS_EXTRACT_BITFIELD(x,0,1)


/** 
 * \brief Word offset 9
 *
 * \details
 * Register: \a PCIE:PCIE_TYPE0_HDR:BAR5
 */
#define VTSS_PCIE_PCIE_TYPE0_HDR_BAR5        VTSS_IOREG(VTSS_TO_PCIE_EP,0x9)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR5 . BAR5_START
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR5_BAR5_START(x)  VTSS_ENCODE_BITFIELD(x,4,28)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR5_BAR5_START     VTSS_ENCODE_BITMASK(4,28)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR5_BAR5_START(x)  VTSS_EXTRACT_BITFIELD(x,4,28)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR5 . BAR5_PREFETCH
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR5_BAR5_PREFETCH(x)  VTSS_ENCODE_BITFIELD(!!(x),3,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR5_BAR5_PREFETCH  VTSS_BIT(3)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR5_BAR5_PREFETCH(x)  VTSS_EXTRACT_BITFIELD(x,3,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR5 . BAR5_TYPE
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR5_BAR5_TYPE(x)  VTSS_ENCODE_BITFIELD(x,1,2)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR5_BAR5_TYPE     VTSS_ENCODE_BITMASK(1,2)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR5_BAR5_TYPE(x)  VTSS_EXTRACT_BITFIELD(x,1,2)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_BAR5 . BAR5_MEM_IO
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_BAR5_BAR5_MEM_IO(x)  VTSS_ENCODE_BITFIELD(!!(x),0,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_BAR5_BAR5_MEM_IO  VTSS_BIT(0)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_BAR5_BAR5_MEM_IO(x)  VTSS_EXTRACT_BITFIELD(x,0,1)


/** 
 * \brief Word offset 10
 *
 * \details
 * Register: \a PCIE:PCIE_TYPE0_HDR:CARDBUS_CIS_PTR
 */
#define VTSS_PCIE_PCIE_TYPE0_HDR_CARDBUS_CIS_PTR  VTSS_IOREG(VTSS_TO_PCIE_EP,0xa)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_CARDBUS_CIS_PTR . CARDBUS_CIS_POINTER
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_CARDBUS_CIS_PTR_CARDBUS_CIS_POINTER(x)  (x)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_CARDBUS_CIS_PTR_CARDBUS_CIS_POINTER     0xffffffff
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_CARDBUS_CIS_PTR_CARDBUS_CIS_POINTER(x)  (x)


/** 
 * \brief Word offset 11
 *
 * \details
 * Register: \a PCIE:PCIE_TYPE0_HDR:SUBSYSTEM_ID_SUBSYSTEM_VENDOR_ID
 */
#define VTSS_PCIE_PCIE_TYPE0_HDR_SUBSYSTEM_ID_SUBSYSTEM_VENDOR_ID  VTSS_IOREG(VTSS_TO_PCIE_EP,0xb)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_SUBSYSTEM_ID_SUBSYSTEM_VENDOR_ID . SUBSYS_DEV_ID
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_SUBSYSTEM_ID_SUBSYSTEM_VENDOR_ID_SUBSYS_DEV_ID(x)  VTSS_ENCODE_BITFIELD(x,16,16)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_SUBSYSTEM_ID_SUBSYSTEM_VENDOR_ID_SUBSYS_DEV_ID     VTSS_ENCODE_BITMASK(16,16)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_SUBSYSTEM_ID_SUBSYSTEM_VENDOR_ID_SUBSYS_DEV_ID(x)  VTSS_EXTRACT_BITFIELD(x,16,16)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_SUBSYSTEM_ID_SUBSYSTEM_VENDOR_ID . SUBSYS_VENDOR_ID
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_SUBSYSTEM_ID_SUBSYSTEM_VENDOR_ID_SUBSYS_VENDOR_ID(x)  VTSS_ENCODE_BITFIELD(x,0,16)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_SUBSYSTEM_ID_SUBSYSTEM_VENDOR_ID_SUBSYS_VENDOR_ID     VTSS_ENCODE_BITMASK(0,16)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_SUBSYSTEM_ID_SUBSYSTEM_VENDOR_ID_SUBSYS_VENDOR_ID(x)  VTSS_EXTRACT_BITFIELD(x,0,16)


/** 
 * \brief Word offset 12
 *
 * \details
 * Register: \a PCIE:PCIE_TYPE0_HDR:EXP_ROM_BASE_ADDR
 */
#define VTSS_PCIE_PCIE_TYPE0_HDR_EXP_ROM_BASE_ADDR  VTSS_IOREG(VTSS_TO_PCIE_EP,0xc)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_EXP_ROM_BASE_ADDR . EXP_ROM_BASE_ADDRESS
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_EXP_ROM_BASE_ADDR_EXP_ROM_BASE_ADDRESS(x)  VTSS_ENCODE_BITFIELD(x,11,21)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_EXP_ROM_BASE_ADDR_EXP_ROM_BASE_ADDRESS     VTSS_ENCODE_BITMASK(11,21)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_EXP_ROM_BASE_ADDR_EXP_ROM_BASE_ADDRESS(x)  VTSS_EXTRACT_BITFIELD(x,11,21)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_EXP_ROM_BASE_ADDR . ROM_BAR_ENABLE
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_EXP_ROM_BASE_ADDR_ROM_BAR_ENABLE(x)  VTSS_ENCODE_BITFIELD(!!(x),0,1)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_EXP_ROM_BASE_ADDR_ROM_BAR_ENABLE  VTSS_BIT(0)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_EXP_ROM_BASE_ADDR_ROM_BAR_ENABLE(x)  VTSS_EXTRACT_BITFIELD(x,0,1)


/** 
 * \brief Word offset 13
 *
 * \details
 * Register: \a PCIE:PCIE_TYPE0_HDR:PCI_CAP_PTR
 */
#define VTSS_PCIE_PCIE_TYPE0_HDR_PCI_CAP_PTR  VTSS_IOREG(VTSS_TO_PCIE_EP,0xd)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_PCI_CAP_PTR . CAP_POINTER
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_PCI_CAP_PTR_CAP_POINTER(x)  VTSS_ENCODE_BITFIELD(x,0,8)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_PCI_CAP_PTR_CAP_POINTER     VTSS_ENCODE_BITMASK(0,8)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_PCI_CAP_PTR_CAP_POINTER(x)  VTSS_EXTRACT_BITFIELD(x,0,8)


/** 
 * \brief Word offset 15
 *
 * \details
 * Register: \a PCIE:PCIE_TYPE0_HDR:MAX_LATENCY_MIN_GRANT_INTERRUPT_PIN_INTERRUPT_LINE
 */
#define VTSS_PCIE_PCIE_TYPE0_HDR_MAX_LATENCY_MIN_GRANT_INTERRUPT_PIN_INTERRUPT_LINE  VTSS_IOREG(VTSS_TO_PCIE_EP,0xf)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_MAX_LATENCY_MIN_GRANT_INTERRUPT_PIN_INTERRUPT_LINE . INT_PIN
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_MAX_LATENCY_MIN_GRANT_INTERRUPT_PIN_INTERRUPT_LINE_INT_PIN(x)  VTSS_ENCODE_BITFIELD(x,8,8)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_MAX_LATENCY_MIN_GRANT_INTERRUPT_PIN_INTERRUPT_LINE_INT_PIN     VTSS_ENCODE_BITMASK(8,8)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_MAX_LATENCY_MIN_GRANT_INTERRUPT_PIN_INTERRUPT_LINE_INT_PIN(x)  VTSS_EXTRACT_BITFIELD(x,8,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_TYPE0_HDR_MAX_LATENCY_MIN_GRANT_INTERRUPT_PIN_INTERRUPT_LINE . INT_LINE
 */
#define  VTSS_F_PCIE_PCIE_TYPE0_HDR_MAX_LATENCY_MIN_GRANT_INTERRUPT_PIN_INTERRUPT_LINE_INT_LINE(x)  VTSS_ENCODE_BITFIELD(x,0,8)
#define  VTSS_M_PCIE_PCIE_TYPE0_HDR_MAX_LATENCY_MIN_GRANT_INTERRUPT_PIN_INTERRUPT_LINE_INT_LINE     VTSS_ENCODE_BITMASK(0,8)
#define  VTSS_X_PCIE_PCIE_TYPE0_HDR_MAX_LATENCY_MIN_GRANT_INTERRUPT_PIN_INTERRUPT_LINE_INT_LINE(x)  VTSS_EXTRACT_BITFIELD(x,0,8)

/**
 * Register Group: \a PCIE:PCIE_PM_CAP
 *
 * PCIe Power Management Interface
 */


/** 
 * \brief Word offset 0
 *
 * \details
 * Register: \a PCIE:PCIE_PM_CAP:CAP_ID_NXT_PTR
 */
#define VTSS_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR  VTSS_IOREG(VTSS_TO_PCIE_EP,0x10)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR . PME_SUPPORT
 */
#define  VTSS_F_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_PME_SUPPORT(x)  VTSS_ENCODE_BITFIELD(x,27,5)
#define  VTSS_M_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_PME_SUPPORT     VTSS_ENCODE_BITMASK(27,5)
#define  VTSS_X_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_PME_SUPPORT(x)  VTSS_EXTRACT_BITFIELD(x,27,5)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR . D2_SUPPORT
 */
#define  VTSS_F_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_D2_SUPPORT(x)  VTSS_ENCODE_BITFIELD(!!(x),26,1)
#define  VTSS_M_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_D2_SUPPORT  VTSS_BIT(26)
#define  VTSS_X_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_D2_SUPPORT(x)  VTSS_EXTRACT_BITFIELD(x,26,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR . D1_SUPPORT
 */
#define  VTSS_F_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_D1_SUPPORT(x)  VTSS_ENCODE_BITFIELD(!!(x),25,1)
#define  VTSS_M_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_D1_SUPPORT  VTSS_BIT(25)
#define  VTSS_X_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_D1_SUPPORT(x)  VTSS_EXTRACT_BITFIELD(x,25,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR . AUX_CURR
 */
#define  VTSS_F_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_AUX_CURR(x)  VTSS_ENCODE_BITFIELD(x,22,3)
#define  VTSS_M_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_AUX_CURR     VTSS_ENCODE_BITMASK(22,3)
#define  VTSS_X_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_AUX_CURR(x)  VTSS_EXTRACT_BITFIELD(x,22,3)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR . DSI
 */
#define  VTSS_F_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_DSI(x)  VTSS_ENCODE_BITFIELD(!!(x),21,1)
#define  VTSS_M_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_DSI  VTSS_BIT(21)
#define  VTSS_X_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_DSI(x)  VTSS_EXTRACT_BITFIELD(x,21,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR . PME_CLK
 */
#define  VTSS_F_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_PME_CLK(x)  VTSS_ENCODE_BITFIELD(!!(x),19,1)
#define  VTSS_M_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_PME_CLK  VTSS_BIT(19)
#define  VTSS_X_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_PME_CLK(x)  VTSS_EXTRACT_BITFIELD(x,19,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR . PM_SPEC_VER
 */
#define  VTSS_F_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_PM_SPEC_VER(x)  VTSS_ENCODE_BITFIELD(x,16,3)
#define  VTSS_M_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_PM_SPEC_VER     VTSS_ENCODE_BITMASK(16,3)
#define  VTSS_X_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_PM_SPEC_VER(x)  VTSS_EXTRACT_BITFIELD(x,16,3)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR . PM_NEXT_POINTER
 */
#define  VTSS_F_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_PM_NEXT_POINTER(x)  VTSS_ENCODE_BITFIELD(x,8,8)
#define  VTSS_M_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_PM_NEXT_POINTER     VTSS_ENCODE_BITMASK(8,8)
#define  VTSS_X_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_PM_NEXT_POINTER(x)  VTSS_EXTRACT_BITFIELD(x,8,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR . PM_CAP_ID
 */
#define  VTSS_F_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_PM_CAP_ID(x)  VTSS_ENCODE_BITFIELD(x,0,8)
#define  VTSS_M_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_PM_CAP_ID     VTSS_ENCODE_BITMASK(0,8)
#define  VTSS_X_PCIE_PCIE_PM_CAP_CAP_ID_NXT_PTR_PM_CAP_ID(x)  VTSS_EXTRACT_BITFIELD(x,0,8)


/** 
 * \brief Word offset 1
 *
 * \details
 * Register: \a PCIE:PCIE_PM_CAP:CON_STATUS
 */
#define VTSS_PCIE_PCIE_PM_CAP_CON_STATUS     VTSS_IOREG(VTSS_TO_PCIE_EP,0x11)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PM_CAP_CON_STATUS . DATA_REG_ADD_INFO
 */
#define  VTSS_F_PCIE_PCIE_PM_CAP_CON_STATUS_DATA_REG_ADD_INFO(x)  VTSS_ENCODE_BITFIELD(x,24,8)
#define  VTSS_M_PCIE_PCIE_PM_CAP_CON_STATUS_DATA_REG_ADD_INFO     VTSS_ENCODE_BITMASK(24,8)
#define  VTSS_X_PCIE_PCIE_PM_CAP_CON_STATUS_DATA_REG_ADD_INFO(x)  VTSS_EXTRACT_BITFIELD(x,24,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PM_CAP_CON_STATUS . BUS_PWR_CLK_CON_EN
 */
#define  VTSS_F_PCIE_PCIE_PM_CAP_CON_STATUS_BUS_PWR_CLK_CON_EN(x)  VTSS_ENCODE_BITFIELD(!!(x),23,1)
#define  VTSS_M_PCIE_PCIE_PM_CAP_CON_STATUS_BUS_PWR_CLK_CON_EN  VTSS_BIT(23)
#define  VTSS_X_PCIE_PCIE_PM_CAP_CON_STATUS_BUS_PWR_CLK_CON_EN(x)  VTSS_EXTRACT_BITFIELD(x,23,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PM_CAP_CON_STATUS . B2_B3_SUPPORT
 */
#define  VTSS_F_PCIE_PCIE_PM_CAP_CON_STATUS_B2_B3_SUPPORT(x)  VTSS_ENCODE_BITFIELD(!!(x),22,1)
#define  VTSS_M_PCIE_PCIE_PM_CAP_CON_STATUS_B2_B3_SUPPORT  VTSS_BIT(22)
#define  VTSS_X_PCIE_PCIE_PM_CAP_CON_STATUS_B2_B3_SUPPORT(x)  VTSS_EXTRACT_BITFIELD(x,22,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PM_CAP_CON_STATUS . PME_STATUS
 */
#define  VTSS_F_PCIE_PCIE_PM_CAP_CON_STATUS_PME_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),15,1)
#define  VTSS_M_PCIE_PCIE_PM_CAP_CON_STATUS_PME_STATUS  VTSS_BIT(15)
#define  VTSS_X_PCIE_PCIE_PM_CAP_CON_STATUS_PME_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,15,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PM_CAP_CON_STATUS . DATA_SCALE
 */
#define  VTSS_F_PCIE_PCIE_PM_CAP_CON_STATUS_DATA_SCALE(x)  VTSS_ENCODE_BITFIELD(x,13,2)
#define  VTSS_M_PCIE_PCIE_PM_CAP_CON_STATUS_DATA_SCALE     VTSS_ENCODE_BITMASK(13,2)
#define  VTSS_X_PCIE_PCIE_PM_CAP_CON_STATUS_DATA_SCALE(x)  VTSS_EXTRACT_BITFIELD(x,13,2)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PM_CAP_CON_STATUS . DATA_SELECT
 */
#define  VTSS_F_PCIE_PCIE_PM_CAP_CON_STATUS_DATA_SELECT(x)  VTSS_ENCODE_BITFIELD(x,9,4)
#define  VTSS_M_PCIE_PCIE_PM_CAP_CON_STATUS_DATA_SELECT     VTSS_ENCODE_BITMASK(9,4)
#define  VTSS_X_PCIE_PCIE_PM_CAP_CON_STATUS_DATA_SELECT(x)  VTSS_EXTRACT_BITFIELD(x,9,4)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PM_CAP_CON_STATUS . PME_ENABLE
 */
#define  VTSS_F_PCIE_PCIE_PM_CAP_CON_STATUS_PME_ENABLE(x)  VTSS_ENCODE_BITFIELD(!!(x),8,1)
#define  VTSS_M_PCIE_PCIE_PM_CAP_CON_STATUS_PME_ENABLE  VTSS_BIT(8)
#define  VTSS_X_PCIE_PCIE_PM_CAP_CON_STATUS_PME_ENABLE(x)  VTSS_EXTRACT_BITFIELD(x,8,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PM_CAP_CON_STATUS . NO_SOFT_RST
 */
#define  VTSS_F_PCIE_PCIE_PM_CAP_CON_STATUS_NO_SOFT_RST(x)  VTSS_ENCODE_BITFIELD(!!(x),3,1)
#define  VTSS_M_PCIE_PCIE_PM_CAP_CON_STATUS_NO_SOFT_RST  VTSS_BIT(3)
#define  VTSS_X_PCIE_PCIE_PM_CAP_CON_STATUS_NO_SOFT_RST(x)  VTSS_EXTRACT_BITFIELD(x,3,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PM_CAP_CON_STATUS . POWER_STATE
 */
#define  VTSS_F_PCIE_PCIE_PM_CAP_CON_STATUS_POWER_STATE(x)  VTSS_ENCODE_BITFIELD(x,0,2)
#define  VTSS_M_PCIE_PCIE_PM_CAP_CON_STATUS_POWER_STATE     VTSS_ENCODE_BITMASK(0,2)
#define  VTSS_X_PCIE_PCIE_PM_CAP_CON_STATUS_POWER_STATE(x)  VTSS_EXTRACT_BITFIELD(x,0,2)

/**
 * Register Group: \a PCIE:PCIE_MSI_CAP
 *
 * PCIe Message Signaled Interrupts
 */


/** 
 * \brief Word offset 0
 *
 * \details
 * Register: \a PCIE:PCIE_MSI_CAP:PCI_MSI_CAP_ID_NEXT_CTRL
 */
#define VTSS_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL  VTSS_IOREG(VTSS_TO_PCIE_EP,0x14)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL . PCI_PVM_SUPPORT
 */
#define  VTSS_F_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_PVM_SUPPORT(x)  VTSS_ENCODE_BITFIELD(!!(x),24,1)
#define  VTSS_M_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_PVM_SUPPORT  VTSS_BIT(24)
#define  VTSS_X_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_PVM_SUPPORT(x)  VTSS_EXTRACT_BITFIELD(x,24,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL . PCI_MSI_64_BIT_ADDR_CAP
 */
#define  VTSS_F_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_MSI_64_BIT_ADDR_CAP(x)  VTSS_ENCODE_BITFIELD(!!(x),23,1)
#define  VTSS_M_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_MSI_64_BIT_ADDR_CAP  VTSS_BIT(23)
#define  VTSS_X_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_MSI_64_BIT_ADDR_CAP(x)  VTSS_EXTRACT_BITFIELD(x,23,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL . PCI_MSI_MULTIPLE_MSG_EN
 */
#define  VTSS_F_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_MSI_MULTIPLE_MSG_EN(x)  VTSS_ENCODE_BITFIELD(x,20,3)
#define  VTSS_M_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_MSI_MULTIPLE_MSG_EN     VTSS_ENCODE_BITMASK(20,3)
#define  VTSS_X_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_MSI_MULTIPLE_MSG_EN(x)  VTSS_EXTRACT_BITFIELD(x,20,3)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL . PCI_MSI_MULTIPLE_MSG_CAP
 */
#define  VTSS_F_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_MSI_MULTIPLE_MSG_CAP(x)  VTSS_ENCODE_BITFIELD(x,17,3)
#define  VTSS_M_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_MSI_MULTIPLE_MSG_CAP     VTSS_ENCODE_BITMASK(17,3)
#define  VTSS_X_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_MSI_MULTIPLE_MSG_CAP(x)  VTSS_EXTRACT_BITFIELD(x,17,3)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL . PCI_MSI_ENABLE
 */
#define  VTSS_F_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_MSI_ENABLE(x)  VTSS_ENCODE_BITFIELD(!!(x),16,1)
#define  VTSS_M_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_MSI_ENABLE  VTSS_BIT(16)
#define  VTSS_X_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_MSI_ENABLE(x)  VTSS_EXTRACT_BITFIELD(x,16,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL . PCI_MSI_CAP_NEXT_OFFSET
 */
#define  VTSS_F_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_MSI_CAP_NEXT_OFFSET(x)  VTSS_ENCODE_BITFIELD(x,8,8)
#define  VTSS_M_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_MSI_CAP_NEXT_OFFSET     VTSS_ENCODE_BITMASK(8,8)
#define  VTSS_X_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_MSI_CAP_NEXT_OFFSET(x)  VTSS_EXTRACT_BITFIELD(x,8,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL . PCI_MSI_CAP_ID
 */
#define  VTSS_F_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_MSI_CAP_ID(x)  VTSS_ENCODE_BITFIELD(x,0,8)
#define  VTSS_M_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_MSI_CAP_ID     VTSS_ENCODE_BITMASK(0,8)
#define  VTSS_X_PCIE_PCIE_MSI_CAP_PCI_MSI_CAP_ID_NEXT_CTRL_PCI_MSI_CAP_ID(x)  VTSS_EXTRACT_BITFIELD(x,0,8)


/** 
 * \brief Word offset 1
 *
 * \details
 * Register: \a PCIE:PCIE_MSI_CAP:MSI_LOWER_32
 */
#define VTSS_PCIE_PCIE_MSI_CAP_MSI_LOWER_32  VTSS_IOREG(VTSS_TO_PCIE_EP,0x15)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_MSI_CAP_MSI_LOWER_32 . PCI_MSI_LOWER_32
 */
#define  VTSS_F_PCIE_PCIE_MSI_CAP_MSI_LOWER_32_PCI_MSI_LOWER_32(x)  VTSS_ENCODE_BITFIELD(x,2,30)
#define  VTSS_M_PCIE_PCIE_MSI_CAP_MSI_LOWER_32_PCI_MSI_LOWER_32     VTSS_ENCODE_BITMASK(2,30)
#define  VTSS_X_PCIE_PCIE_MSI_CAP_MSI_LOWER_32_PCI_MSI_LOWER_32(x)  VTSS_EXTRACT_BITFIELD(x,2,30)


/** 
 * \brief Word offset 2
 *
 * \details
 * Register: \a PCIE:PCIE_MSI_CAP:MSI_UPPER_32
 */
#define VTSS_PCIE_PCIE_MSI_CAP_MSI_UPPER_32  VTSS_IOREG(VTSS_TO_PCIE_EP,0x16)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_MSI_CAP_MSI_UPPER_32 . PCI_MSI_UPPER_32
 */
#define  VTSS_F_PCIE_PCIE_MSI_CAP_MSI_UPPER_32_PCI_MSI_UPPER_32(x)  (x)
#define  VTSS_M_PCIE_PCIE_MSI_CAP_MSI_UPPER_32_PCI_MSI_UPPER_32     0xffffffff
#define  VTSS_X_PCIE_PCIE_MSI_CAP_MSI_UPPER_32_PCI_MSI_UPPER_32(x)  (x)


/** 
 * \brief Word offset 5
 *
 * \details
 * Register: \a PCIE:PCIE_MSI_CAP:MSI_PENDING_BIT
 */
#define VTSS_PCIE_PCIE_MSI_CAP_MSI_PENDING_BIT  VTSS_IOREG(VTSS_TO_PCIE_EP,0x19)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_MSI_CAP_MSI_PENDING_BIT . PCI_MSI_PENDING_BIT
 */
#define  VTSS_F_PCIE_PCIE_MSI_CAP_MSI_PENDING_BIT_PCI_MSI_PENDING_BIT(x)  (x)
#define  VTSS_M_PCIE_PCIE_MSI_CAP_MSI_PENDING_BIT_PCI_MSI_PENDING_BIT     0xffffffff
#define  VTSS_X_PCIE_PCIE_MSI_CAP_MSI_PENDING_BIT_PCI_MSI_PENDING_BIT(x)  (x)

/**
 * Register Group: \a PCIE:PCIE_CAP
 *
 * PCIe Capability Register Set
 */


/** 
 * \brief Word offset 0
 *
 * \details
 * Register: \a PCIE:PCIE_CAP:PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP
 */
#define VTSS_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1c)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP . RSVD
 */
#define  VTSS_F_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_RSVD(x)  VTSS_ENCODE_BITFIELD(!!(x),30,1)
#define  VTSS_M_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_RSVD  VTSS_BIT(30)
#define  VTSS_X_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_RSVD(x)  VTSS_EXTRACT_BITFIELD(x,30,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP . PCIE_INT_MSG_NUM
 */
#define  VTSS_F_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_PCIE_INT_MSG_NUM(x)  VTSS_ENCODE_BITFIELD(x,25,5)
#define  VTSS_M_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_PCIE_INT_MSG_NUM     VTSS_ENCODE_BITMASK(25,5)
#define  VTSS_X_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_PCIE_INT_MSG_NUM(x)  VTSS_EXTRACT_BITFIELD(x,25,5)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP . PCIE_SLOT_IMP
 */
#define  VTSS_F_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_PCIE_SLOT_IMP(x)  VTSS_ENCODE_BITFIELD(!!(x),24,1)
#define  VTSS_M_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_PCIE_SLOT_IMP  VTSS_BIT(24)
#define  VTSS_X_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_PCIE_SLOT_IMP(x)  VTSS_EXTRACT_BITFIELD(x,24,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP . PCIE_DEV_PORT_TYPE
 */
#define  VTSS_F_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_PCIE_DEV_PORT_TYPE(x)  VTSS_ENCODE_BITFIELD(x,20,4)
#define  VTSS_M_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_PCIE_DEV_PORT_TYPE     VTSS_ENCODE_BITMASK(20,4)
#define  VTSS_X_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_PCIE_DEV_PORT_TYPE(x)  VTSS_EXTRACT_BITFIELD(x,20,4)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP . PCIE_CAP
 */
#define  VTSS_F_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_PCIE_CAP(x)  VTSS_ENCODE_BITFIELD(x,16,4)
#define  VTSS_M_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_PCIE_CAP     VTSS_ENCODE_BITMASK(16,4)
#define  VTSS_X_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_PCIE_CAP(x)  VTSS_EXTRACT_BITFIELD(x,16,4)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP . PCIE_CAP_NEXT_PTR
 */
#define  VTSS_F_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_PCIE_CAP_NEXT_PTR(x)  VTSS_ENCODE_BITFIELD(x,8,8)
#define  VTSS_M_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_PCIE_CAP_NEXT_PTR     VTSS_ENCODE_BITMASK(8,8)
#define  VTSS_X_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_PCIE_CAP_NEXT_PTR(x)  VTSS_EXTRACT_BITFIELD(x,8,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP . PCIE_CAP_ID
 */
#define  VTSS_F_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_PCIE_CAP_ID(x)  VTSS_ENCODE_BITFIELD(x,0,8)
#define  VTSS_M_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_PCIE_CAP_ID     VTSS_ENCODE_BITMASK(0,8)
#define  VTSS_X_PCIE_PCIE_CAP_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_PCIE_CAP_ID(x)  VTSS_EXTRACT_BITFIELD(x,0,8)


/** 
 * \brief Word offset 1
 *
 * \details
 * Register: \a PCIE:PCIE_CAP:DEVICE_CAPABILITIES
 */
#define VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1d)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES . PCIE_CAP_FLR_CAP
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_FLR_CAP(x)  VTSS_ENCODE_BITFIELD(!!(x),28,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_FLR_CAP  VTSS_BIT(28)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_FLR_CAP(x)  VTSS_EXTRACT_BITFIELD(x,28,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES . PCIE_CAP_ROLE_BASED_ERR_REPORT
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_ROLE_BASED_ERR_REPORT(x)  VTSS_ENCODE_BITFIELD(!!(x),15,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_ROLE_BASED_ERR_REPORT  VTSS_BIT(15)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_ROLE_BASED_ERR_REPORT(x)  VTSS_EXTRACT_BITFIELD(x,15,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES . PCIE_CAP_EP_L1_ACCPT_LATENCY
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_EP_L1_ACCPT_LATENCY(x)  VTSS_ENCODE_BITFIELD(x,9,3)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_EP_L1_ACCPT_LATENCY     VTSS_ENCODE_BITMASK(9,3)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_EP_L1_ACCPT_LATENCY(x)  VTSS_EXTRACT_BITFIELD(x,9,3)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES . PCIE_CAP_EP_L0S_ACCPT_LATENCY
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_EP_L0S_ACCPT_LATENCY(x)  VTSS_ENCODE_BITFIELD(x,6,3)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_EP_L0S_ACCPT_LATENCY     VTSS_ENCODE_BITMASK(6,3)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_EP_L0S_ACCPT_LATENCY(x)  VTSS_EXTRACT_BITFIELD(x,6,3)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES . PCIE_CAP_EXT_TAG_SUPP
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_EXT_TAG_SUPP(x)  VTSS_ENCODE_BITFIELD(!!(x),5,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_EXT_TAG_SUPP  VTSS_BIT(5)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_EXT_TAG_SUPP(x)  VTSS_EXTRACT_BITFIELD(x,5,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES . PCIE_CAP_PHANTOM_FUNC_SUPPORT
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_PHANTOM_FUNC_SUPPORT(x)  VTSS_ENCODE_BITFIELD(x,3,2)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_PHANTOM_FUNC_SUPPORT     VTSS_ENCODE_BITMASK(3,2)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_PHANTOM_FUNC_SUPPORT(x)  VTSS_EXTRACT_BITFIELD(x,3,2)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES . PCIE_CAP_MAX_PAYLOAD_SIZE
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_MAX_PAYLOAD_SIZE(x)  VTSS_ENCODE_BITFIELD(x,0,3)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_MAX_PAYLOAD_SIZE     VTSS_ENCODE_BITMASK(0,3)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CAPABILITIES_PCIE_CAP_MAX_PAYLOAD_SIZE(x)  VTSS_EXTRACT_BITFIELD(x,0,3)


/** 
 * \brief Word offset 2
 *
 * \details
 * Register: \a PCIE:PCIE_CAP:DEVICE_CONTROL_DEVICE_STATUS
 */
#define VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1e)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS . PCIE_CAP_TRANS_PENDING
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_TRANS_PENDING(x)  VTSS_ENCODE_BITFIELD(!!(x),21,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_TRANS_PENDING  VTSS_BIT(21)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_TRANS_PENDING(x)  VTSS_EXTRACT_BITFIELD(x,21,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS . PCIE_CAP_AUX_POWER_DETECTED
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_AUX_POWER_DETECTED(x)  VTSS_ENCODE_BITFIELD(!!(x),20,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_AUX_POWER_DETECTED  VTSS_BIT(20)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_AUX_POWER_DETECTED(x)  VTSS_EXTRACT_BITFIELD(x,20,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS . PCIE_CAP_UNSUPPORTED_REQ_DETECTED
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_UNSUPPORTED_REQ_DETECTED(x)  VTSS_ENCODE_BITFIELD(!!(x),19,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_UNSUPPORTED_REQ_DETECTED  VTSS_BIT(19)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_UNSUPPORTED_REQ_DETECTED(x)  VTSS_EXTRACT_BITFIELD(x,19,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS . PCIE_CAP_FATAL_ERR_DETECTED
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_FATAL_ERR_DETECTED(x)  VTSS_ENCODE_BITFIELD(!!(x),18,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_FATAL_ERR_DETECTED  VTSS_BIT(18)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_FATAL_ERR_DETECTED(x)  VTSS_EXTRACT_BITFIELD(x,18,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS . PCIE_CAP_NON_FATAL_ERR_DETECTED
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_NON_FATAL_ERR_DETECTED(x)  VTSS_ENCODE_BITFIELD(!!(x),17,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_NON_FATAL_ERR_DETECTED  VTSS_BIT(17)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_NON_FATAL_ERR_DETECTED(x)  VTSS_EXTRACT_BITFIELD(x,17,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS . PCIE_CAP_CORR_ERR_DETECTED
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_CORR_ERR_DETECTED(x)  VTSS_ENCODE_BITFIELD(!!(x),16,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_CORR_ERR_DETECTED  VTSS_BIT(16)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_CORR_ERR_DETECTED(x)  VTSS_EXTRACT_BITFIELD(x,16,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS . PCIE_CAP_INITIATE_FLR
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_INITIATE_FLR(x)  VTSS_ENCODE_BITFIELD(!!(x),15,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_INITIATE_FLR  VTSS_BIT(15)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_INITIATE_FLR(x)  VTSS_EXTRACT_BITFIELD(x,15,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS . PCIE_CAP_MAX_READ_REQ_SIZE
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_MAX_READ_REQ_SIZE(x)  VTSS_ENCODE_BITFIELD(x,12,3)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_MAX_READ_REQ_SIZE     VTSS_ENCODE_BITMASK(12,3)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_MAX_READ_REQ_SIZE(x)  VTSS_EXTRACT_BITFIELD(x,12,3)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS . PCIE_CAP_EN_NO_SNOOP
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_EN_NO_SNOOP(x)  VTSS_ENCODE_BITFIELD(!!(x),11,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_EN_NO_SNOOP  VTSS_BIT(11)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_EN_NO_SNOOP(x)  VTSS_EXTRACT_BITFIELD(x,11,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS . PCIE_CAP_AUX_POWER_PM_EN
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_AUX_POWER_PM_EN(x)  VTSS_ENCODE_BITFIELD(!!(x),10,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_AUX_POWER_PM_EN  VTSS_BIT(10)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_AUX_POWER_PM_EN(x)  VTSS_EXTRACT_BITFIELD(x,10,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS . PCIE_CAP_PHANTOM_FUNC_EN
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_PHANTOM_FUNC_EN(x)  VTSS_ENCODE_BITFIELD(!!(x),9,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_PHANTOM_FUNC_EN  VTSS_BIT(9)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_PHANTOM_FUNC_EN(x)  VTSS_EXTRACT_BITFIELD(x,9,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS . PCIE_CAP_EXT_TAG_EN
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_EXT_TAG_EN(x)  VTSS_ENCODE_BITFIELD(!!(x),8,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_EXT_TAG_EN  VTSS_BIT(8)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_EXT_TAG_EN(x)  VTSS_EXTRACT_BITFIELD(x,8,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS . PCIE_CAP_MAX_PAYLOAD_SIZE_CS
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_MAX_PAYLOAD_SIZE_CS(x)  VTSS_ENCODE_BITFIELD(x,5,3)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_MAX_PAYLOAD_SIZE_CS     VTSS_ENCODE_BITMASK(5,3)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_MAX_PAYLOAD_SIZE_CS(x)  VTSS_EXTRACT_BITFIELD(x,5,3)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS . PCIE_CAP_EN_REL_ORDER
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_EN_REL_ORDER(x)  VTSS_ENCODE_BITFIELD(!!(x),4,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_EN_REL_ORDER  VTSS_BIT(4)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_EN_REL_ORDER(x)  VTSS_EXTRACT_BITFIELD(x,4,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS . PCIE_CAP_UNSUPPORT_REQ_REP_EN
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_UNSUPPORT_REQ_REP_EN(x)  VTSS_ENCODE_BITFIELD(!!(x),3,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_UNSUPPORT_REQ_REP_EN  VTSS_BIT(3)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_UNSUPPORT_REQ_REP_EN(x)  VTSS_EXTRACT_BITFIELD(x,3,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS . PCIE_CAP_FATAL_ERR_REPORT_EN
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_FATAL_ERR_REPORT_EN(x)  VTSS_ENCODE_BITFIELD(!!(x),2,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_FATAL_ERR_REPORT_EN  VTSS_BIT(2)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_FATAL_ERR_REPORT_EN(x)  VTSS_EXTRACT_BITFIELD(x,2,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS . PCIE_CAP_NON_FATAL_ERR_REPORT_EN
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_NON_FATAL_ERR_REPORT_EN(x)  VTSS_ENCODE_BITFIELD(!!(x),1,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_NON_FATAL_ERR_REPORT_EN  VTSS_BIT(1)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_NON_FATAL_ERR_REPORT_EN(x)  VTSS_EXTRACT_BITFIELD(x,1,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS . PCIE_CAP_CORR_ERR_REPORT_EN
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_CORR_ERR_REPORT_EN(x)  VTSS_ENCODE_BITFIELD(!!(x),0,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_CORR_ERR_REPORT_EN  VTSS_BIT(0)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CONTROL_DEVICE_STATUS_PCIE_CAP_CORR_ERR_REPORT_EN(x)  VTSS_EXTRACT_BITFIELD(x,0,1)


/** 
 * \brief Word offset 3
 *
 * \details
 * Register: \a PCIE:PCIE_CAP:LINK_CAPABILITIES
 */
#define VTSS_PCIE_PCIE_CAP_LINK_CAPABILITIES  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1f)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CAPABILITIES . PCIE_CAP_PORT_NUM
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_PORT_NUM(x)  VTSS_ENCODE_BITFIELD(x,24,8)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_PORT_NUM     VTSS_ENCODE_BITMASK(24,8)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_PORT_NUM(x)  VTSS_EXTRACT_BITFIELD(x,24,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CAPABILITIES . PCIE_CAP_ASPM_OPT_COMPLIANCE
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_ASPM_OPT_COMPLIANCE(x)  VTSS_ENCODE_BITFIELD(!!(x),22,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_ASPM_OPT_COMPLIANCE  VTSS_BIT(22)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_ASPM_OPT_COMPLIANCE(x)  VTSS_EXTRACT_BITFIELD(x,22,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CAPABILITIES . PCIE_CAP_LINK_BW_NOT_CAP
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_LINK_BW_NOT_CAP(x)  VTSS_ENCODE_BITFIELD(!!(x),21,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_LINK_BW_NOT_CAP  VTSS_BIT(21)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_LINK_BW_NOT_CAP(x)  VTSS_EXTRACT_BITFIELD(x,21,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CAPABILITIES . PCIE_CAP_DLL_ACTIVE_REP_CAP
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_DLL_ACTIVE_REP_CAP(x)  VTSS_ENCODE_BITFIELD(!!(x),20,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_DLL_ACTIVE_REP_CAP  VTSS_BIT(20)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_DLL_ACTIVE_REP_CAP(x)  VTSS_EXTRACT_BITFIELD(x,20,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CAPABILITIES . PCIE_CAP_SURPRISE_DOWN_ERR_REP_CAP
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_SURPRISE_DOWN_ERR_REP_CAP(x)  VTSS_ENCODE_BITFIELD(!!(x),19,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_SURPRISE_DOWN_ERR_REP_CAP  VTSS_BIT(19)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_SURPRISE_DOWN_ERR_REP_CAP(x)  VTSS_EXTRACT_BITFIELD(x,19,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CAPABILITIES . PCIE_CAP_CLOCK_POWER_MAN
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_CLOCK_POWER_MAN(x)  VTSS_ENCODE_BITFIELD(!!(x),18,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_CLOCK_POWER_MAN  VTSS_BIT(18)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_CLOCK_POWER_MAN(x)  VTSS_EXTRACT_BITFIELD(x,18,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CAPABILITIES . PCIE_CAP_L1_EXIT_LATENCY
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_L1_EXIT_LATENCY(x)  VTSS_ENCODE_BITFIELD(x,15,3)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_L1_EXIT_LATENCY     VTSS_ENCODE_BITMASK(15,3)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_L1_EXIT_LATENCY(x)  VTSS_EXTRACT_BITFIELD(x,15,3)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CAPABILITIES . PCIE_CAP_L0S_EXIT_LATENCY
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_L0S_EXIT_LATENCY(x)  VTSS_ENCODE_BITFIELD(x,12,3)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_L0S_EXIT_LATENCY     VTSS_ENCODE_BITMASK(12,3)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_L0S_EXIT_LATENCY(x)  VTSS_EXTRACT_BITFIELD(x,12,3)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CAPABILITIES . PCIE_CAP_ACTIVE_STATE_LINK_PM_SUPPORT
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_ACTIVE_STATE_LINK_PM_SUPPORT(x)  VTSS_ENCODE_BITFIELD(x,10,2)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_ACTIVE_STATE_LINK_PM_SUPPORT     VTSS_ENCODE_BITMASK(10,2)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_ACTIVE_STATE_LINK_PM_SUPPORT(x)  VTSS_EXTRACT_BITFIELD(x,10,2)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CAPABILITIES . PCIE_CAP_MAX_LINK_WIDTH
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_MAX_LINK_WIDTH(x)  VTSS_ENCODE_BITFIELD(x,4,6)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_MAX_LINK_WIDTH     VTSS_ENCODE_BITMASK(4,6)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_MAX_LINK_WIDTH(x)  VTSS_EXTRACT_BITFIELD(x,4,6)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CAPABILITIES . PCIE_CAP_MAX_LINK_SPEED
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_MAX_LINK_SPEED(x)  VTSS_ENCODE_BITFIELD(x,0,4)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_MAX_LINK_SPEED     VTSS_ENCODE_BITMASK(0,4)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CAPABILITIES_PCIE_CAP_MAX_LINK_SPEED(x)  VTSS_EXTRACT_BITFIELD(x,0,4)


/** 
 * \brief Word offset 4
 *
 * \details
 * Register: \a PCIE:PCIE_CAP:LINK_CONTROL_LINK_STATUS
 */
#define VTSS_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS  VTSS_IOREG(VTSS_TO_PCIE_EP,0x20)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS . PCIE_CAP_LINK_AUOT_BW_STATUS
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_AUOT_BW_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),31,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_AUOT_BW_STATUS  VTSS_BIT(31)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_AUOT_BW_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,31,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS . PCIE_CAP_LINK_BW_MAN_STATUS
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_BW_MAN_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),30,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_BW_MAN_STATUS  VTSS_BIT(30)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_BW_MAN_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,30,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS . PCIE_CAP_DLL_ACTIVE
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_DLL_ACTIVE(x)  VTSS_ENCODE_BITFIELD(!!(x),29,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_DLL_ACTIVE  VTSS_BIT(29)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_DLL_ACTIVE(x)  VTSS_EXTRACT_BITFIELD(x,29,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS . PCIE_CAP_SLOT_CLK_CONFIG
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_SLOT_CLK_CONFIG(x)  VTSS_ENCODE_BITFIELD(!!(x),28,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_SLOT_CLK_CONFIG  VTSS_BIT(28)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_SLOT_CLK_CONFIG(x)  VTSS_EXTRACT_BITFIELD(x,28,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS . PCIE_CAP_LINK_TRAINING
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_TRAINING(x)  VTSS_ENCODE_BITFIELD(!!(x),27,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_TRAINING  VTSS_BIT(27)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_TRAINING(x)  VTSS_EXTRACT_BITFIELD(x,27,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS . PCIE_CAP_NEGO_LINK_WIDTH
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_NEGO_LINK_WIDTH(x)  VTSS_ENCODE_BITFIELD(x,20,5)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_NEGO_LINK_WIDTH     VTSS_ENCODE_BITMASK(20,5)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_NEGO_LINK_WIDTH(x)  VTSS_EXTRACT_BITFIELD(x,20,5)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS . PCIE_CAP_LINK_SPEED
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_SPEED(x)  VTSS_ENCODE_BITFIELD(x,16,4)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_SPEED     VTSS_ENCODE_BITMASK(16,4)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_SPEED(x)  VTSS_EXTRACT_BITFIELD(x,16,4)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS . PCIE_CAP_LINK_AUTO_BW_INT_EN
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_AUTO_BW_INT_EN(x)  VTSS_ENCODE_BITFIELD(!!(x),11,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_AUTO_BW_INT_EN  VTSS_BIT(11)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_AUTO_BW_INT_EN(x)  VTSS_EXTRACT_BITFIELD(x,11,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS . PCIE_CAP_LINK_BW_MAN_INT_EN
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_BW_MAN_INT_EN(x)  VTSS_ENCODE_BITFIELD(!!(x),10,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_BW_MAN_INT_EN  VTSS_BIT(10)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_BW_MAN_INT_EN(x)  VTSS_EXTRACT_BITFIELD(x,10,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS . PCIE_CAP_EN_CLK_POWER_MAN
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_EN_CLK_POWER_MAN(x)  VTSS_ENCODE_BITFIELD(!!(x),8,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_EN_CLK_POWER_MAN  VTSS_BIT(8)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_EN_CLK_POWER_MAN(x)  VTSS_EXTRACT_BITFIELD(x,8,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS . PCIE_CAP_EXTENDED_SYNCH
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_EXTENDED_SYNCH(x)  VTSS_ENCODE_BITFIELD(!!(x),7,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_EXTENDED_SYNCH  VTSS_BIT(7)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_EXTENDED_SYNCH(x)  VTSS_EXTRACT_BITFIELD(x,7,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS . PCIE_CAP_COMMON_CLK_CONFIG
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_COMMON_CLK_CONFIG(x)  VTSS_ENCODE_BITFIELD(!!(x),6,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_COMMON_CLK_CONFIG  VTSS_BIT(6)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_COMMON_CLK_CONFIG(x)  VTSS_EXTRACT_BITFIELD(x,6,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS . PCIE_CAP_RETRAIN_LINK
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_RETRAIN_LINK(x)  VTSS_ENCODE_BITFIELD(!!(x),5,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_RETRAIN_LINK  VTSS_BIT(5)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_RETRAIN_LINK(x)  VTSS_EXTRACT_BITFIELD(x,5,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS . PCIE_CAP_LINK_DISABLE
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_DISABLE(x)  VTSS_ENCODE_BITFIELD(!!(x),4,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_DISABLE  VTSS_BIT(4)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_LINK_DISABLE(x)  VTSS_EXTRACT_BITFIELD(x,4,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS . PCIE_CAP_RCB
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_RCB(x)  VTSS_ENCODE_BITFIELD(!!(x),3,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_RCB  VTSS_BIT(3)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_RCB(x)  VTSS_EXTRACT_BITFIELD(x,3,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS . PCIE_CAP_ACTIVE_STATE_LINK_PM_CONTROL
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_ACTIVE_STATE_LINK_PM_CONTROL(x)  VTSS_ENCODE_BITFIELD(x,0,2)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_ACTIVE_STATE_LINK_PM_CONTROL     VTSS_ENCODE_BITMASK(0,2)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL_LINK_STATUS_PCIE_CAP_ACTIVE_STATE_LINK_PM_CONTROL(x)  VTSS_EXTRACT_BITFIELD(x,0,2)


/** 
 * \brief Word offset 9
 *
 * \details
 * Register: \a PCIE:PCIE_CAP:DEVICE_CAPABILITIES2
 */
#define VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2  VTSS_IOREG(VTSS_TO_PCIE_EP,0x25)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2 . PCIE_CAP_OBFF_SUPPORT
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_OBFF_SUPPORT(x)  VTSS_ENCODE_BITFIELD(x,18,2)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_OBFF_SUPPORT     VTSS_ENCODE_BITMASK(18,2)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_OBFF_SUPPORT(x)  VTSS_EXTRACT_BITFIELD(x,18,2)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2 . PCIE_CAP_TPH_CMPLT_SUPPORT_1
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_TPH_CMPLT_SUPPORT_1(x)  VTSS_ENCODE_BITFIELD(!!(x),13,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_TPH_CMPLT_SUPPORT_1  VTSS_BIT(13)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_TPH_CMPLT_SUPPORT_1(x)  VTSS_EXTRACT_BITFIELD(x,13,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2 . PCIE_CAP_TPH_CMPLT_SUPPORT_0
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_TPH_CMPLT_SUPPORT_0(x)  VTSS_ENCODE_BITFIELD(!!(x),12,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_TPH_CMPLT_SUPPORT_0  VTSS_BIT(12)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_TPH_CMPLT_SUPPORT_0(x)  VTSS_EXTRACT_BITFIELD(x,12,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2 . PCIE_CAP_LTR_SUPP
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_LTR_SUPP(x)  VTSS_ENCODE_BITFIELD(!!(x),11,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_LTR_SUPP  VTSS_BIT(11)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_LTR_SUPP(x)  VTSS_EXTRACT_BITFIELD(x,11,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2 . PCIE_CAP_NO_RO_EN_PR2PR_PAR
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_NO_RO_EN_PR2PR_PAR(x)  VTSS_ENCODE_BITFIELD(!!(x),10,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_NO_RO_EN_PR2PR_PAR  VTSS_BIT(10)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_NO_RO_EN_PR2PR_PAR(x)  VTSS_EXTRACT_BITFIELD(x,10,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2 . PCIE_CAP_128_CAS_CPL_SUPP
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_128_CAS_CPL_SUPP(x)  VTSS_ENCODE_BITFIELD(!!(x),9,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_128_CAS_CPL_SUPP  VTSS_BIT(9)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_128_CAS_CPL_SUPP(x)  VTSS_EXTRACT_BITFIELD(x,9,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2 . PCIE_CAP_64_ATOMIC_CPL_SUPP
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_64_ATOMIC_CPL_SUPP(x)  VTSS_ENCODE_BITFIELD(!!(x),8,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_64_ATOMIC_CPL_SUPP  VTSS_BIT(8)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_64_ATOMIC_CPL_SUPP(x)  VTSS_EXTRACT_BITFIELD(x,8,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2 . PCIE_CAP_32_ATOMIC_CPL_SUPP
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_32_ATOMIC_CPL_SUPP(x)  VTSS_ENCODE_BITFIELD(!!(x),7,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_32_ATOMIC_CPL_SUPP  VTSS_BIT(7)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_32_ATOMIC_CPL_SUPP(x)  VTSS_EXTRACT_BITFIELD(x,7,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2 . PCIE_CAP_ATOMIC_ROUTING_SUPP
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_ATOMIC_ROUTING_SUPP(x)  VTSS_ENCODE_BITFIELD(!!(x),6,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_ATOMIC_ROUTING_SUPP  VTSS_BIT(6)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_ATOMIC_ROUTING_SUPP(x)  VTSS_EXTRACT_BITFIELD(x,6,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2 . PCIE_CAP_ARI_FORWARD_SUPPORT
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_ARI_FORWARD_SUPPORT(x)  VTSS_ENCODE_BITFIELD(!!(x),5,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_ARI_FORWARD_SUPPORT  VTSS_BIT(5)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_ARI_FORWARD_SUPPORT(x)  VTSS_EXTRACT_BITFIELD(x,5,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2 . PCIE_CAP_CPL_TIMEOUT_DISABLE_SUPPORT
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_CPL_TIMEOUT_DISABLE_SUPPORT(x)  VTSS_ENCODE_BITFIELD(!!(x),4,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_CPL_TIMEOUT_DISABLE_SUPPORT  VTSS_BIT(4)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_CPL_TIMEOUT_DISABLE_SUPPORT(x)  VTSS_EXTRACT_BITFIELD(x,4,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2 . PCIE_CAP_CPL_TIMEOUT_RANGE
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_CPL_TIMEOUT_RANGE(x)  VTSS_ENCODE_BITFIELD(x,0,4)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_CPL_TIMEOUT_RANGE     VTSS_ENCODE_BITMASK(0,4)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CAPABILITIES2_PCIE_CAP_CPL_TIMEOUT_RANGE(x)  VTSS_EXTRACT_BITFIELD(x,0,4)


/** 
 * \brief Word offset 10
 *
 * \details
 * Register: \a PCIE:PCIE_CAP:DEVICE_CONTROL2_DEVICE_STATUS2
 */
#define VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL2_DEVICE_STATUS2  VTSS_IOREG(VTSS_TO_PCIE_EP,0x26)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL2_DEVICE_STATUS2 . PCIE_CAP_ARI_FORWARD_SUPPORT_CS
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CONTROL2_DEVICE_STATUS2_PCIE_CAP_ARI_FORWARD_SUPPORT_CS(x)  VTSS_ENCODE_BITFIELD(!!(x),5,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CONTROL2_DEVICE_STATUS2_PCIE_CAP_ARI_FORWARD_SUPPORT_CS  VTSS_BIT(5)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CONTROL2_DEVICE_STATUS2_PCIE_CAP_ARI_FORWARD_SUPPORT_CS(x)  VTSS_EXTRACT_BITFIELD(x,5,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_DEVICE_CONTROL2_DEVICE_STATUS2 . PCIE_CAP_CPL_TIMEOUT_DISABLE
 */
#define  VTSS_F_PCIE_PCIE_CAP_DEVICE_CONTROL2_DEVICE_STATUS2_PCIE_CAP_CPL_TIMEOUT_DISABLE(x)  VTSS_ENCODE_BITFIELD(!!(x),4,1)
#define  VTSS_M_PCIE_PCIE_CAP_DEVICE_CONTROL2_DEVICE_STATUS2_PCIE_CAP_CPL_TIMEOUT_DISABLE  VTSS_BIT(4)
#define  VTSS_X_PCIE_PCIE_CAP_DEVICE_CONTROL2_DEVICE_STATUS2_PCIE_CAP_CPL_TIMEOUT_DISABLE(x)  VTSS_EXTRACT_BITFIELD(x,4,1)


/** 
 * \brief Word offset 11
 *
 * \details
 * Register: \a PCIE:PCIE_CAP:LINK_CAPABILITIES2
 */
#define VTSS_PCIE_PCIE_CAP_LINK_CAPABILITIES2  VTSS_IOREG(VTSS_TO_PCIE_EP,0x27)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CAPABILITIES2 . PCIE_CAP_CROSS_LINK_SUPPORT
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CAPABILITIES2_PCIE_CAP_CROSS_LINK_SUPPORT(x)  VTSS_ENCODE_BITFIELD(!!(x),8,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CAPABILITIES2_PCIE_CAP_CROSS_LINK_SUPPORT  VTSS_BIT(8)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CAPABILITIES2_PCIE_CAP_CROSS_LINK_SUPPORT(x)  VTSS_EXTRACT_BITFIELD(x,8,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CAPABILITIES2 . PCIE_CAP_SUPPORT_LINK_SPEED_VECTOR
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CAPABILITIES2_PCIE_CAP_SUPPORT_LINK_SPEED_VECTOR(x)  VTSS_ENCODE_BITFIELD(x,1,7)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CAPABILITIES2_PCIE_CAP_SUPPORT_LINK_SPEED_VECTOR     VTSS_ENCODE_BITMASK(1,7)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CAPABILITIES2_PCIE_CAP_SUPPORT_LINK_SPEED_VECTOR(x)  VTSS_EXTRACT_BITFIELD(x,1,7)


/** 
 * \brief Word offset 12
 *
 * \details
 * Register: \a PCIE:PCIE_CAP:LINK_CONTROL2_LINK_STATUS2
 */
#define VTSS_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2  VTSS_IOREG(VTSS_TO_PCIE_EP,0x28)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2 . PCIE_CAP_LINK_EQ_REQ
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2_PCIE_CAP_LINK_EQ_REQ(x)  VTSS_ENCODE_BITFIELD(!!(x),21,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2_PCIE_CAP_LINK_EQ_REQ  VTSS_BIT(21)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2_PCIE_CAP_LINK_EQ_REQ(x)  VTSS_EXTRACT_BITFIELD(x,21,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2 . PCIE_CAP_EQ_CPL_P3
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2_PCIE_CAP_EQ_CPL_P3(x)  VTSS_ENCODE_BITFIELD(!!(x),20,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2_PCIE_CAP_EQ_CPL_P3  VTSS_BIT(20)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2_PCIE_CAP_EQ_CPL_P3(x)  VTSS_EXTRACT_BITFIELD(x,20,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2 . PCIE_CAP_EQ_CPL_P2
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2_PCIE_CAP_EQ_CPL_P2(x)  VTSS_ENCODE_BITFIELD(!!(x),19,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2_PCIE_CAP_EQ_CPL_P2  VTSS_BIT(19)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2_PCIE_CAP_EQ_CPL_P2(x)  VTSS_EXTRACT_BITFIELD(x,19,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2 . PCIE_CAP_EQ_CPL_P1
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2_PCIE_CAP_EQ_CPL_P1(x)  VTSS_ENCODE_BITFIELD(!!(x),18,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2_PCIE_CAP_EQ_CPL_P1  VTSS_BIT(18)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2_PCIE_CAP_EQ_CPL_P1(x)  VTSS_EXTRACT_BITFIELD(x,18,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2 . PCIE_CAP_EQ_CPL
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2_PCIE_CAP_EQ_CPL(x)  VTSS_ENCODE_BITFIELD(!!(x),17,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2_PCIE_CAP_EQ_CPL  VTSS_BIT(17)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2_PCIE_CAP_EQ_CPL(x)  VTSS_EXTRACT_BITFIELD(x,17,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2 . PCIE_CAP_CURR_DEEMPHASIS
 */
#define  VTSS_F_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2_PCIE_CAP_CURR_DEEMPHASIS(x)  VTSS_ENCODE_BITFIELD(!!(x),16,1)
#define  VTSS_M_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2_PCIE_CAP_CURR_DEEMPHASIS  VTSS_BIT(16)
#define  VTSS_X_PCIE_PCIE_CAP_LINK_CONTROL2_LINK_STATUS2_PCIE_CAP_CURR_DEEMPHASIS(x)  VTSS_EXTRACT_BITFIELD(x,16,1)

/**
 * Register Group: \a PCIE:PCIE_AER_CAP
 *
 * PCIe Advanced Error Capability and Control
 */


/** 
 * \brief Word offset 0
 *
 * \details
 * Register: \a PCIE:PCIE_AER_CAP:AER_EXT_CAP_HDR
 */
#define VTSS_PCIE_PCIE_AER_CAP_AER_EXT_CAP_HDR  VTSS_IOREG(VTSS_TO_PCIE_EP,0x40)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_AER_EXT_CAP_HDR . NEXT_OFFSET
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_AER_EXT_CAP_HDR_NEXT_OFFSET(x)  VTSS_ENCODE_BITFIELD(x,20,12)
#define  VTSS_M_PCIE_PCIE_AER_CAP_AER_EXT_CAP_HDR_NEXT_OFFSET     VTSS_ENCODE_BITMASK(20,12)
#define  VTSS_X_PCIE_PCIE_AER_CAP_AER_EXT_CAP_HDR_NEXT_OFFSET(x)  VTSS_EXTRACT_BITFIELD(x,20,12)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_AER_EXT_CAP_HDR . CAP_VERSION
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_AER_EXT_CAP_HDR_CAP_VERSION(x)  VTSS_ENCODE_BITFIELD(x,16,4)
#define  VTSS_M_PCIE_PCIE_AER_CAP_AER_EXT_CAP_HDR_CAP_VERSION     VTSS_ENCODE_BITMASK(16,4)
#define  VTSS_X_PCIE_PCIE_AER_CAP_AER_EXT_CAP_HDR_CAP_VERSION(x)  VTSS_EXTRACT_BITFIELD(x,16,4)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_AER_EXT_CAP_HDR . CAP_ID
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_AER_EXT_CAP_HDR_CAP_ID(x)  VTSS_ENCODE_BITFIELD(x,0,16)
#define  VTSS_M_PCIE_PCIE_AER_CAP_AER_EXT_CAP_HDR_CAP_ID     VTSS_ENCODE_BITMASK(0,16)
#define  VTSS_X_PCIE_PCIE_AER_CAP_AER_EXT_CAP_HDR_CAP_ID(x)  VTSS_EXTRACT_BITFIELD(x,0,16)


/** 
 * \brief Word offset 1
 *
 * \details
 * Register: \a PCIE:PCIE_AER_CAP:UNCORR_ERR_STATUS
 */
#define VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS  VTSS_IOREG(VTSS_TO_PCIE_EP,0x41)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS . ATOMIC_EGRESS_BLOCKED_ERR_STATUS
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_ATOMIC_EGRESS_BLOCKED_ERR_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),24,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_ATOMIC_EGRESS_BLOCKED_ERR_STATUS  VTSS_BIT(24)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_ATOMIC_EGRESS_BLOCKED_ERR_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,24,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS . INTERNAL_ERR_STATUS
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_INTERNAL_ERR_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),22,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_INTERNAL_ERR_STATUS  VTSS_BIT(22)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_INTERNAL_ERR_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,22,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS . UNSUPPORTED_REQ_ERR_STATUS
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_UNSUPPORTED_REQ_ERR_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),20,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_UNSUPPORTED_REQ_ERR_STATUS  VTSS_BIT(20)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_UNSUPPORTED_REQ_ERR_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,20,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS . ECRC_ERR_STATUS
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_ECRC_ERR_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),19,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_ECRC_ERR_STATUS  VTSS_BIT(19)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_ECRC_ERR_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,19,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS . MALF_TLP_ERR_STATUS
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_MALF_TLP_ERR_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),18,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_MALF_TLP_ERR_STATUS  VTSS_BIT(18)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_MALF_TLP_ERR_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,18,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS . REC_OVERFLOW_ERR_STATUS
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_REC_OVERFLOW_ERR_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),17,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_REC_OVERFLOW_ERR_STATUS  VTSS_BIT(17)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_REC_OVERFLOW_ERR_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,17,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS . UNEXP_CMPLT_ERR_STATUS
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_UNEXP_CMPLT_ERR_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),16,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_UNEXP_CMPLT_ERR_STATUS  VTSS_BIT(16)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_UNEXP_CMPLT_ERR_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,16,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS . CMPLT_ABORT_ERR_STATUS
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_CMPLT_ABORT_ERR_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),15,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_CMPLT_ABORT_ERR_STATUS  VTSS_BIT(15)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_CMPLT_ABORT_ERR_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,15,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS . CMPLT_TIMEOUT_ERR_STATUS
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_CMPLT_TIMEOUT_ERR_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),14,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_CMPLT_TIMEOUT_ERR_STATUS  VTSS_BIT(14)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_CMPLT_TIMEOUT_ERR_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,14,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS . FC_PROTOCOL_ERR_STATUS
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_FC_PROTOCOL_ERR_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),13,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_FC_PROTOCOL_ERR_STATUS  VTSS_BIT(13)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_FC_PROTOCOL_ERR_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,13,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS . POIS_TLP_ERR_STATUS
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_POIS_TLP_ERR_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),12,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_POIS_TLP_ERR_STATUS  VTSS_BIT(12)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_POIS_TLP_ERR_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,12,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS . SUR_DWN_ERR_STATUS
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_SUR_DWN_ERR_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),5,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_SUR_DWN_ERR_STATUS  VTSS_BIT(5)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_SUR_DWN_ERR_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,5,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS . DL_PROTOCOL_ERR_STATUS
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_DL_PROTOCOL_ERR_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),4,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_DL_PROTOCOL_ERR_STATUS  VTSS_BIT(4)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_STATUS_DL_PROTOCOL_ERR_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,4,1)


/** 
 * \brief Word offset 2
 *
 * \details
 * Register: \a PCIE:PCIE_AER_CAP:UNCORR_ERR_MASK
 */
#define VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK  VTSS_IOREG(VTSS_TO_PCIE_EP,0x42)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK . ATOMIC_EGRESS_BLOCKED_ERR_MASK
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_ATOMIC_EGRESS_BLOCKED_ERR_MASK(x)  VTSS_ENCODE_BITFIELD(!!(x),24,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_ATOMIC_EGRESS_BLOCKED_ERR_MASK  VTSS_BIT(24)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_ATOMIC_EGRESS_BLOCKED_ERR_MASK(x)  VTSS_EXTRACT_BITFIELD(x,24,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK . INTERNAL_ERR_MASK
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_INTERNAL_ERR_MASK(x)  VTSS_ENCODE_BITFIELD(!!(x),22,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_INTERNAL_ERR_MASK  VTSS_BIT(22)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_INTERNAL_ERR_MASK(x)  VTSS_EXTRACT_BITFIELD(x,22,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK . UNSUPPORTED_REQ_ERR_MASK
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_UNSUPPORTED_REQ_ERR_MASK(x)  VTSS_ENCODE_BITFIELD(!!(x),20,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_UNSUPPORTED_REQ_ERR_MASK  VTSS_BIT(20)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_UNSUPPORTED_REQ_ERR_MASK(x)  VTSS_EXTRACT_BITFIELD(x,20,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK . ECRC_ERR_MASK
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_ECRC_ERR_MASK(x)  VTSS_ENCODE_BITFIELD(!!(x),19,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_ECRC_ERR_MASK  VTSS_BIT(19)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_ECRC_ERR_MASK(x)  VTSS_EXTRACT_BITFIELD(x,19,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK . MALF_TLP_ERR_MASK
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_MALF_TLP_ERR_MASK(x)  VTSS_ENCODE_BITFIELD(!!(x),18,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_MALF_TLP_ERR_MASK  VTSS_BIT(18)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_MALF_TLP_ERR_MASK(x)  VTSS_EXTRACT_BITFIELD(x,18,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK . REC_OVERFLOW_ERR_MASK
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_REC_OVERFLOW_ERR_MASK(x)  VTSS_ENCODE_BITFIELD(!!(x),17,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_REC_OVERFLOW_ERR_MASK  VTSS_BIT(17)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_REC_OVERFLOW_ERR_MASK(x)  VTSS_EXTRACT_BITFIELD(x,17,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK . UNEXP_CMPLT_ERR_MASK
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_UNEXP_CMPLT_ERR_MASK(x)  VTSS_ENCODE_BITFIELD(!!(x),16,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_UNEXP_CMPLT_ERR_MASK  VTSS_BIT(16)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_UNEXP_CMPLT_ERR_MASK(x)  VTSS_EXTRACT_BITFIELD(x,16,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK . CMPLT_ABORT_ERR_MASK
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_CMPLT_ABORT_ERR_MASK(x)  VTSS_ENCODE_BITFIELD(!!(x),15,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_CMPLT_ABORT_ERR_MASK  VTSS_BIT(15)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_CMPLT_ABORT_ERR_MASK(x)  VTSS_EXTRACT_BITFIELD(x,15,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK . CMPLT_TIMEOUT_ERR_MASK
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_CMPLT_TIMEOUT_ERR_MASK(x)  VTSS_ENCODE_BITFIELD(!!(x),14,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_CMPLT_TIMEOUT_ERR_MASK  VTSS_BIT(14)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_CMPLT_TIMEOUT_ERR_MASK(x)  VTSS_EXTRACT_BITFIELD(x,14,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK . FC_PROTOCOL_ERR_MASK
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_FC_PROTOCOL_ERR_MASK(x)  VTSS_ENCODE_BITFIELD(!!(x),13,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_FC_PROTOCOL_ERR_MASK  VTSS_BIT(13)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_FC_PROTOCOL_ERR_MASK(x)  VTSS_EXTRACT_BITFIELD(x,13,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK . POIS_TLP_ERR_MASK
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_POIS_TLP_ERR_MASK(x)  VTSS_ENCODE_BITFIELD(!!(x),12,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_POIS_TLP_ERR_MASK  VTSS_BIT(12)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_POIS_TLP_ERR_MASK(x)  VTSS_EXTRACT_BITFIELD(x,12,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK . SUR_DWN_ERR_MASK
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_SUR_DWN_ERR_MASK(x)  VTSS_ENCODE_BITFIELD(!!(x),5,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_SUR_DWN_ERR_MASK  VTSS_BIT(5)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_SUR_DWN_ERR_MASK(x)  VTSS_EXTRACT_BITFIELD(x,5,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK . DL_PROTOCOL_ERR_MASK
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_DL_PROTOCOL_ERR_MASK(x)  VTSS_ENCODE_BITFIELD(!!(x),4,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_DL_PROTOCOL_ERR_MASK  VTSS_BIT(4)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_MASK_DL_PROTOCOL_ERR_MASK(x)  VTSS_EXTRACT_BITFIELD(x,4,1)


/** 
 * \brief Word offset 3
 *
 * \details
 * Register: \a PCIE:PCIE_AER_CAP:UNCORR_ERR_SEV
 */
#define VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV  VTSS_IOREG(VTSS_TO_PCIE_EP,0x43)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV . ATOMIC_EGRESS_BLOCKED_ERR_SEVERITY
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_ATOMIC_EGRESS_BLOCKED_ERR_SEVERITY(x)  VTSS_ENCODE_BITFIELD(!!(x),24,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_ATOMIC_EGRESS_BLOCKED_ERR_SEVERITY  VTSS_BIT(24)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_ATOMIC_EGRESS_BLOCKED_ERR_SEVERITY(x)  VTSS_EXTRACT_BITFIELD(x,24,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV . INTERNAL_ERR_SEVERITY
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_INTERNAL_ERR_SEVERITY(x)  VTSS_ENCODE_BITFIELD(!!(x),22,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_INTERNAL_ERR_SEVERITY  VTSS_BIT(22)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_INTERNAL_ERR_SEVERITY(x)  VTSS_EXTRACT_BITFIELD(x,22,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV . UNSUPPORTED_REQ_ERR_SEVERITY
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_UNSUPPORTED_REQ_ERR_SEVERITY(x)  VTSS_ENCODE_BITFIELD(!!(x),20,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_UNSUPPORTED_REQ_ERR_SEVERITY  VTSS_BIT(20)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_UNSUPPORTED_REQ_ERR_SEVERITY(x)  VTSS_EXTRACT_BITFIELD(x,20,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV . ECRC_ERR_SEVERITY
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_ECRC_ERR_SEVERITY(x)  VTSS_ENCODE_BITFIELD(!!(x),19,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_ECRC_ERR_SEVERITY  VTSS_BIT(19)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_ECRC_ERR_SEVERITY(x)  VTSS_EXTRACT_BITFIELD(x,19,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV . MALF_TLP_ERR_SEVERITY
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_MALF_TLP_ERR_SEVERITY(x)  VTSS_ENCODE_BITFIELD(!!(x),18,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_MALF_TLP_ERR_SEVERITY  VTSS_BIT(18)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_MALF_TLP_ERR_SEVERITY(x)  VTSS_EXTRACT_BITFIELD(x,18,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV . REC_OVERFLOW_ERR_SEVERITY
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_REC_OVERFLOW_ERR_SEVERITY(x)  VTSS_ENCODE_BITFIELD(!!(x),17,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_REC_OVERFLOW_ERR_SEVERITY  VTSS_BIT(17)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_REC_OVERFLOW_ERR_SEVERITY(x)  VTSS_EXTRACT_BITFIELD(x,17,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV . UNEXP_CMPLT_ERR_SEVERITY
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_UNEXP_CMPLT_ERR_SEVERITY(x)  VTSS_ENCODE_BITFIELD(!!(x),16,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_UNEXP_CMPLT_ERR_SEVERITY  VTSS_BIT(16)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_UNEXP_CMPLT_ERR_SEVERITY(x)  VTSS_EXTRACT_BITFIELD(x,16,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV . CMPLT_ABORT_ERR_SEVERITY
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_CMPLT_ABORT_ERR_SEVERITY(x)  VTSS_ENCODE_BITFIELD(!!(x),15,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_CMPLT_ABORT_ERR_SEVERITY  VTSS_BIT(15)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_CMPLT_ABORT_ERR_SEVERITY(x)  VTSS_EXTRACT_BITFIELD(x,15,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV . CMPLT_TIMEOUT_ERR_SEVERITY
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_CMPLT_TIMEOUT_ERR_SEVERITY(x)  VTSS_ENCODE_BITFIELD(!!(x),14,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_CMPLT_TIMEOUT_ERR_SEVERITY  VTSS_BIT(14)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_CMPLT_TIMEOUT_ERR_SEVERITY(x)  VTSS_EXTRACT_BITFIELD(x,14,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV . FC_PROTOCOL_ERR_SEVERITY
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_FC_PROTOCOL_ERR_SEVERITY(x)  VTSS_ENCODE_BITFIELD(!!(x),13,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_FC_PROTOCOL_ERR_SEVERITY  VTSS_BIT(13)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_FC_PROTOCOL_ERR_SEVERITY(x)  VTSS_EXTRACT_BITFIELD(x,13,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV . POIS_TLP_ERR_SEVERITY
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_POIS_TLP_ERR_SEVERITY(x)  VTSS_ENCODE_BITFIELD(!!(x),12,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_POIS_TLP_ERR_SEVERITY  VTSS_BIT(12)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_POIS_TLP_ERR_SEVERITY(x)  VTSS_EXTRACT_BITFIELD(x,12,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV . SUR_DWN_ERR_SEVERITY
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_SUR_DWN_ERR_SEVERITY(x)  VTSS_ENCODE_BITFIELD(!!(x),5,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_SUR_DWN_ERR_SEVERITY  VTSS_BIT(5)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_SUR_DWN_ERR_SEVERITY(x)  VTSS_EXTRACT_BITFIELD(x,5,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV . DL_PROTOCOL_ERR_SEVERITY
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_DL_PROTOCOL_ERR_SEVERITY(x)  VTSS_ENCODE_BITFIELD(!!(x),4,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_DL_PROTOCOL_ERR_SEVERITY  VTSS_BIT(4)
#define  VTSS_X_PCIE_PCIE_AER_CAP_UNCORR_ERR_SEV_DL_PROTOCOL_ERR_SEVERITY(x)  VTSS_EXTRACT_BITFIELD(x,4,1)


/** 
 * \brief Word offset 4
 *
 * \details
 * Register: \a PCIE:PCIE_AER_CAP:CORR_ERR_STATUS
 */
#define VTSS_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS  VTSS_IOREG(VTSS_TO_PCIE_EP,0x44)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS . CORRECTED_INT_ERR_STATUS
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_CORRECTED_INT_ERR_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),14,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_CORRECTED_INT_ERR_STATUS  VTSS_BIT(14)
#define  VTSS_X_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_CORRECTED_INT_ERR_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,14,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS . ADVISORY_NON_FATAL_ERR_STATUS
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_ADVISORY_NON_FATAL_ERR_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),13,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_ADVISORY_NON_FATAL_ERR_STATUS  VTSS_BIT(13)
#define  VTSS_X_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_ADVISORY_NON_FATAL_ERR_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,13,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS . RPL_TIMER_TIMEOUT_STATUS
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_RPL_TIMER_TIMEOUT_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),12,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_RPL_TIMER_TIMEOUT_STATUS  VTSS_BIT(12)
#define  VTSS_X_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_RPL_TIMER_TIMEOUT_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,12,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS . REPLAY_NO_ROLEOVER_STATUS
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_REPLAY_NO_ROLEOVER_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),8,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_REPLAY_NO_ROLEOVER_STATUS  VTSS_BIT(8)
#define  VTSS_X_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_REPLAY_NO_ROLEOVER_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,8,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS . BAD_DLLP_STATUS
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_BAD_DLLP_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),7,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_BAD_DLLP_STATUS  VTSS_BIT(7)
#define  VTSS_X_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_BAD_DLLP_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,7,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS . BAD_TLP_STATUS
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_BAD_TLP_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),6,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_BAD_TLP_STATUS  VTSS_BIT(6)
#define  VTSS_X_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_BAD_TLP_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,6,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS . RX_ERR_STATUS
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_RX_ERR_STATUS(x)  VTSS_ENCODE_BITFIELD(!!(x),0,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_RX_ERR_STATUS  VTSS_BIT(0)
#define  VTSS_X_PCIE_PCIE_AER_CAP_CORR_ERR_STATUS_RX_ERR_STATUS(x)  VTSS_EXTRACT_BITFIELD(x,0,1)


/** 
 * \brief Word offset 5
 *
 * \details
 * Register: \a PCIE:PCIE_AER_CAP:CORR_ERR_MASK
 */
#define VTSS_PCIE_PCIE_AER_CAP_CORR_ERR_MASK  VTSS_IOREG(VTSS_TO_PCIE_EP,0x45)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_CORR_ERR_MASK . CORRECTED_INT_ERR_MASK
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_CORRECTED_INT_ERR_MASK(x)  VTSS_ENCODE_BITFIELD(!!(x),14,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_CORRECTED_INT_ERR_MASK  VTSS_BIT(14)
#define  VTSS_X_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_CORRECTED_INT_ERR_MASK(x)  VTSS_EXTRACT_BITFIELD(x,14,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_CORR_ERR_MASK . ADVISORY_NON_FATAL_ERR_MASK
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_ADVISORY_NON_FATAL_ERR_MASK(x)  VTSS_ENCODE_BITFIELD(!!(x),13,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_ADVISORY_NON_FATAL_ERR_MASK  VTSS_BIT(13)
#define  VTSS_X_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_ADVISORY_NON_FATAL_ERR_MASK(x)  VTSS_EXTRACT_BITFIELD(x,13,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_CORR_ERR_MASK . RPL_TIMER_TIMEOUT_MASK
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_RPL_TIMER_TIMEOUT_MASK(x)  VTSS_ENCODE_BITFIELD(!!(x),12,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_RPL_TIMER_TIMEOUT_MASK  VTSS_BIT(12)
#define  VTSS_X_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_RPL_TIMER_TIMEOUT_MASK(x)  VTSS_EXTRACT_BITFIELD(x,12,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_CORR_ERR_MASK . REPLAY_NO_ROLEOVER_MASK
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_REPLAY_NO_ROLEOVER_MASK(x)  VTSS_ENCODE_BITFIELD(!!(x),8,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_REPLAY_NO_ROLEOVER_MASK  VTSS_BIT(8)
#define  VTSS_X_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_REPLAY_NO_ROLEOVER_MASK(x)  VTSS_EXTRACT_BITFIELD(x,8,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_CORR_ERR_MASK . BAD_DLLP_MASK
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_BAD_DLLP_MASK(x)  VTSS_ENCODE_BITFIELD(!!(x),7,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_BAD_DLLP_MASK  VTSS_BIT(7)
#define  VTSS_X_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_BAD_DLLP_MASK(x)  VTSS_EXTRACT_BITFIELD(x,7,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_CORR_ERR_MASK . BAD_TLP_MASK
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_BAD_TLP_MASK(x)  VTSS_ENCODE_BITFIELD(!!(x),6,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_BAD_TLP_MASK  VTSS_BIT(6)
#define  VTSS_X_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_BAD_TLP_MASK(x)  VTSS_EXTRACT_BITFIELD(x,6,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_CORR_ERR_MASK . RX_ERR_MASK
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_RX_ERR_MASK(x)  VTSS_ENCODE_BITFIELD(!!(x),0,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_RX_ERR_MASK  VTSS_BIT(0)
#define  VTSS_X_PCIE_PCIE_AER_CAP_CORR_ERR_MASK_RX_ERR_MASK(x)  VTSS_EXTRACT_BITFIELD(x,0,1)


/** 
 * \brief Word offset 6
 *
 * \details
 * Register: \a PCIE:PCIE_AER_CAP:ADV_ERR_CAP_CTRL
 */
#define VTSS_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL  VTSS_IOREG(VTSS_TO_PCIE_EP,0x46)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL . ECRC_CHECK_EN
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL_ECRC_CHECK_EN(x)  VTSS_ENCODE_BITFIELD(!!(x),8,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL_ECRC_CHECK_EN  VTSS_BIT(8)
#define  VTSS_X_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL_ECRC_CHECK_EN(x)  VTSS_EXTRACT_BITFIELD(x,8,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL . ECRC_CHECK_CAP
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL_ECRC_CHECK_CAP(x)  VTSS_ENCODE_BITFIELD(!!(x),7,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL_ECRC_CHECK_CAP  VTSS_BIT(7)
#define  VTSS_X_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL_ECRC_CHECK_CAP(x)  VTSS_EXTRACT_BITFIELD(x,7,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL . ECRC_GEN_EN
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL_ECRC_GEN_EN(x)  VTSS_ENCODE_BITFIELD(!!(x),6,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL_ECRC_GEN_EN  VTSS_BIT(6)
#define  VTSS_X_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL_ECRC_GEN_EN(x)  VTSS_EXTRACT_BITFIELD(x,6,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL . ECRC_GEN_CAP
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL_ECRC_GEN_CAP(x)  VTSS_ENCODE_BITFIELD(!!(x),5,1)
#define  VTSS_M_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL_ECRC_GEN_CAP  VTSS_BIT(5)
#define  VTSS_X_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL_ECRC_GEN_CAP(x)  VTSS_EXTRACT_BITFIELD(x,5,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL . FIRST_ERR_POINTER
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL_FIRST_ERR_POINTER(x)  VTSS_ENCODE_BITFIELD(x,0,5)
#define  VTSS_M_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL_FIRST_ERR_POINTER     VTSS_ENCODE_BITMASK(0,5)
#define  VTSS_X_PCIE_PCIE_AER_CAP_ADV_ERR_CAP_CTRL_FIRST_ERR_POINTER(x)  VTSS_EXTRACT_BITFIELD(x,0,5)


/** 
 * \brief Word offset 7
 *
 * \details
 * Register: \a PCIE:PCIE_AER_CAP:HDR_LOG_REG_0
 */
#define VTSS_PCIE_PCIE_AER_CAP_HDR_LOG_REG_0  VTSS_IOREG(VTSS_TO_PCIE_EP,0x47)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_HDR_LOG_REG_0 . FIRST_DWORD
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_HDR_LOG_REG_0_FIRST_DWORD(x)  (x)
#define  VTSS_M_PCIE_PCIE_AER_CAP_HDR_LOG_REG_0_FIRST_DWORD     0xffffffff
#define  VTSS_X_PCIE_PCIE_AER_CAP_HDR_LOG_REG_0_FIRST_DWORD(x)  (x)


/** 
 * \brief Word offset 8
 *
 * \details
 * Register: \a PCIE:PCIE_AER_CAP:HDR_LOG_REG_1
 */
#define VTSS_PCIE_PCIE_AER_CAP_HDR_LOG_REG_1  VTSS_IOREG(VTSS_TO_PCIE_EP,0x48)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_HDR_LOG_REG_1 . SECOND_DWORD
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_HDR_LOG_REG_1_SECOND_DWORD(x)  (x)
#define  VTSS_M_PCIE_PCIE_AER_CAP_HDR_LOG_REG_1_SECOND_DWORD     0xffffffff
#define  VTSS_X_PCIE_PCIE_AER_CAP_HDR_LOG_REG_1_SECOND_DWORD(x)  (x)


/** 
 * \brief Word offset 9
 *
 * \details
 * Register: \a PCIE:PCIE_AER_CAP:HDR_LOG_REG_2
 */
#define VTSS_PCIE_PCIE_AER_CAP_HDR_LOG_REG_2  VTSS_IOREG(VTSS_TO_PCIE_EP,0x49)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_HDR_LOG_REG_2 . THIRD_DWORD
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_HDR_LOG_REG_2_THIRD_DWORD(x)  (x)
#define  VTSS_M_PCIE_PCIE_AER_CAP_HDR_LOG_REG_2_THIRD_DWORD     0xffffffff
#define  VTSS_X_PCIE_PCIE_AER_CAP_HDR_LOG_REG_2_THIRD_DWORD(x)  (x)


/** 
 * \brief Word offset 10
 *
 * \details
 * Register: \a PCIE:PCIE_AER_CAP:HDR_LOG_REG_3
 */
#define VTSS_PCIE_PCIE_AER_CAP_HDR_LOG_REG_3  VTSS_IOREG(VTSS_TO_PCIE_EP,0x4a)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_AER_CAP_HDR_LOG_REG_3 . FOURTH_DWORD
 */
#define  VTSS_F_PCIE_PCIE_AER_CAP_HDR_LOG_REG_3_FOURTH_DWORD(x)  (x)
#define  VTSS_M_PCIE_PCIE_AER_CAP_HDR_LOG_REG_3_FOURTH_DWORD     0xffffffff
#define  VTSS_X_PCIE_PCIE_AER_CAP_HDR_LOG_REG_3_FOURTH_DWORD(x)  (x)

/**
 * Register Group: \a PCIE:PCIE_PORT_LOGIC
 *
 * PCIe Port Logic
 */


/** 
 * \brief Ack Latency Timer and Replay Timer
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:ACK_LATENCY_TIMER
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_ACK_LATENCY_TIMER  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1c0)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ACK_LATENCY_TIMER . REPLAY_TIME_LIMIT
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ACK_LATENCY_TIMER_REPLAY_TIME_LIMIT(x)  VTSS_ENCODE_BITFIELD(x,16,16)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ACK_LATENCY_TIMER_REPLAY_TIME_LIMIT     VTSS_ENCODE_BITMASK(16,16)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ACK_LATENCY_TIMER_REPLAY_TIME_LIMIT(x)  VTSS_EXTRACT_BITFIELD(x,16,16)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ACK_LATENCY_TIMER . ROUND_TRIP_LATENCY_TIME_LIMIT
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ACK_LATENCY_TIMER_ROUND_TRIP_LATENCY_TIME_LIMIT(x)  VTSS_ENCODE_BITFIELD(x,0,16)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ACK_LATENCY_TIMER_ROUND_TRIP_LATENCY_TIME_LIMIT     VTSS_ENCODE_BITMASK(0,16)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ACK_LATENCY_TIMER_ROUND_TRIP_LATENCY_TIME_LIMIT(x)  VTSS_EXTRACT_BITFIELD(x,0,16)


/** 
 * \brief Vendor Specific DLLP
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:VENDOR_SPEC_DLLP
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_VENDOR_SPEC_DLLP  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1c1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VENDOR_SPEC_DLLP . VENDOR_SPEC_DLLP
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VENDOR_SPEC_DLLP_VENDOR_SPEC_DLLP(x)  (x)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VENDOR_SPEC_DLLP_VENDOR_SPEC_DLLP     0xffffffff
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VENDOR_SPEC_DLLP_VENDOR_SPEC_DLLP(x)  (x)


/** 
 * \brief Port Force Link
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:PORT_FORCE
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_PORT_FORCE  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1c2)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_FORCE . CPL_SENT_COUNT
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_FORCE_CPL_SENT_COUNT(x)  VTSS_ENCODE_BITFIELD(x,24,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_FORCE_CPL_SENT_COUNT     VTSS_ENCODE_BITMASK(24,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_FORCE_CPL_SENT_COUNT(x)  VTSS_EXTRACT_BITFIELD(x,24,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_FORCE . LINK_STATE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_FORCE_LINK_STATE(x)  VTSS_ENCODE_BITFIELD(x,16,6)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_FORCE_LINK_STATE     VTSS_ENCODE_BITMASK(16,6)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_FORCE_LINK_STATE(x)  VTSS_EXTRACT_BITFIELD(x,16,6)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_FORCE . FORCED_LTSSM
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_FORCE_FORCED_LTSSM(x)  VTSS_ENCODE_BITFIELD(x,8,4)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_FORCE_FORCED_LTSSM     VTSS_ENCODE_BITMASK(8,4)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_FORCE_FORCED_LTSSM(x)  VTSS_EXTRACT_BITFIELD(x,8,4)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_FORCE . LINK_NUM
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_FORCE_LINK_NUM(x)  VTSS_ENCODE_BITFIELD(x,0,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_FORCE_LINK_NUM     VTSS_ENCODE_BITMASK(0,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_FORCE_LINK_NUM(x)  VTSS_EXTRACT_BITFIELD(x,0,8)


/** 
 * \brief Ack Frequency and L0-L1 ASPM Control
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:ACK_F_ASPM_CTRL
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1c3)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL . ENTER_ASPM
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL_ENTER_ASPM(x)  VTSS_ENCODE_BITFIELD(!!(x),30,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL_ENTER_ASPM  VTSS_BIT(30)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL_ENTER_ASPM(x)  VTSS_EXTRACT_BITFIELD(x,30,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL . L1_ENTRANCE_LATENCY
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL_L1_ENTRANCE_LATENCY(x)  VTSS_ENCODE_BITFIELD(x,27,3)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL_L1_ENTRANCE_LATENCY     VTSS_ENCODE_BITMASK(27,3)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL_L1_ENTRANCE_LATENCY(x)  VTSS_EXTRACT_BITFIELD(x,27,3)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL . L0_ENTRANCE_LATENCY
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL_L0_ENTRANCE_LATENCY(x)  VTSS_ENCODE_BITFIELD(x,24,3)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL_L0_ENTRANCE_LATENCY     VTSS_ENCODE_BITMASK(24,3)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL_L0_ENTRANCE_LATENCY(x)  VTSS_EXTRACT_BITFIELD(x,24,3)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL . COMMON_CLK_N_FTS
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL_COMMON_CLK_N_FTS(x)  VTSS_ENCODE_BITFIELD(x,16,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL_COMMON_CLK_N_FTS     VTSS_ENCODE_BITMASK(16,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL_COMMON_CLK_N_FTS(x)  VTSS_EXTRACT_BITFIELD(x,16,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL . ACK_N_FTS
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL_ACK_N_FTS(x)  VTSS_ENCODE_BITFIELD(x,8,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL_ACK_N_FTS     VTSS_ENCODE_BITMASK(8,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL_ACK_N_FTS(x)  VTSS_EXTRACT_BITFIELD(x,8,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL . ACK_FREQ
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL_ACK_FREQ(x)  VTSS_ENCODE_BITFIELD(x,0,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL_ACK_FREQ     VTSS_ENCODE_BITMASK(0,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ACK_F_ASPM_CTRL_ACK_FREQ(x)  VTSS_EXTRACT_BITFIELD(x,0,8)


/** 
 * \brief Port Link Control
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:PORT_LINK_CTRL
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1c4)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL . RESERVED3
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_RESERVED3(x)  VTSS_ENCODE_BITFIELD(x,28,4)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_RESERVED3     VTSS_ENCODE_BITMASK(28,4)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_RESERVED3(x)  VTSS_EXTRACT_BITFIELD(x,28,4)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL . TRANSMIT_LANE_REVERSALE_ENABLE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_TRANSMIT_LANE_REVERSALE_ENABLE(x)  VTSS_ENCODE_BITFIELD(!!(x),27,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_TRANSMIT_LANE_REVERSALE_ENABLE  VTSS_BIT(27)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_TRANSMIT_LANE_REVERSALE_ENABLE(x)  VTSS_EXTRACT_BITFIELD(x,27,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL . EXTENDED_SYNCH
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_EXTENDED_SYNCH(x)  VTSS_ENCODE_BITFIELD(!!(x),26,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_EXTENDED_SYNCH  VTSS_BIT(26)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_EXTENDED_SYNCH(x)  VTSS_EXTRACT_BITFIELD(x,26,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL . CORRUPT_LCRC_ENABLE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_CORRUPT_LCRC_ENABLE(x)  VTSS_ENCODE_BITFIELD(!!(x),25,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_CORRUPT_LCRC_ENABLE  VTSS_BIT(25)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_CORRUPT_LCRC_ENABLE(x)  VTSS_EXTRACT_BITFIELD(x,25,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL . BEACON_ENABLE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_BEACON_ENABLE(x)  VTSS_ENCODE_BITFIELD(!!(x),24,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_BEACON_ENABLE  VTSS_BIT(24)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_BEACON_ENABLE(x)  VTSS_EXTRACT_BITFIELD(x,24,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL . RESERVED2
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_RESERVED2(x)  VTSS_ENCODE_BITFIELD(x,22,2)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_RESERVED2     VTSS_ENCODE_BITMASK(22,2)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_RESERVED2(x)  VTSS_EXTRACT_BITFIELD(x,22,2)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL . LINK_CAPABLE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_LINK_CAPABLE(x)  VTSS_ENCODE_BITFIELD(x,16,6)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_LINK_CAPABLE     VTSS_ENCODE_BITMASK(16,6)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_LINK_CAPABLE(x)  VTSS_EXTRACT_BITFIELD(x,16,6)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL . RESERVED1
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_RESERVED1(x)  VTSS_ENCODE_BITFIELD(x,12,4)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_RESERVED1     VTSS_ENCODE_BITMASK(12,4)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_RESERVED1(x)  VTSS_EXTRACT_BITFIELD(x,12,4)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL . LINK_RATE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_LINK_RATE(x)  VTSS_ENCODE_BITFIELD(x,8,4)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_LINK_RATE     VTSS_ENCODE_BITMASK(8,4)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_LINK_RATE(x)  VTSS_EXTRACT_BITFIELD(x,8,4)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL . FAST_LINK_MODE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_FAST_LINK_MODE(x)  VTSS_ENCODE_BITFIELD(!!(x),7,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_FAST_LINK_MODE  VTSS_BIT(7)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_FAST_LINK_MODE(x)  VTSS_EXTRACT_BITFIELD(x,7,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL . LINK_DISABLE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_LINK_DISABLE(x)  VTSS_ENCODE_BITFIELD(!!(x),6,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_LINK_DISABLE  VTSS_BIT(6)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_LINK_DISABLE(x)  VTSS_EXTRACT_BITFIELD(x,6,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL . DLL_LINK_EN
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_DLL_LINK_EN(x)  VTSS_ENCODE_BITFIELD(!!(x),5,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_DLL_LINK_EN  VTSS_BIT(5)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_DLL_LINK_EN(x)  VTSS_EXTRACT_BITFIELD(x,5,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL . RESERVED0
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_RESERVED0(x)  VTSS_ENCODE_BITFIELD(!!(x),4,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_RESERVED0  VTSS_BIT(4)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_RESERVED0(x)  VTSS_EXTRACT_BITFIELD(x,4,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL . RESET_ASSERT
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_RESET_ASSERT(x)  VTSS_ENCODE_BITFIELD(!!(x),3,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_RESET_ASSERT  VTSS_BIT(3)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_RESET_ASSERT(x)  VTSS_EXTRACT_BITFIELD(x,3,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL . LOOPBACK_ENABLE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_LOOPBACK_ENABLE(x)  VTSS_ENCODE_BITFIELD(!!(x),2,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_LOOPBACK_ENABLE  VTSS_BIT(2)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_LOOPBACK_ENABLE(x)  VTSS_EXTRACT_BITFIELD(x,2,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL . SCRAMBLE_DISABLE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_SCRAMBLE_DISABLE(x)  VTSS_ENCODE_BITFIELD(!!(x),1,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_SCRAMBLE_DISABLE  VTSS_BIT(1)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_SCRAMBLE_DISABLE(x)  VTSS_EXTRACT_BITFIELD(x,1,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL . VENDOR_SPECIFIC_DLLP_REQ
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_VENDOR_SPECIFIC_DLLP_REQ(x)  VTSS_ENCODE_BITFIELD(!!(x),0,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_VENDOR_SPECIFIC_DLLP_REQ  VTSS_BIT(0)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PORT_LINK_CTRL_VENDOR_SPECIFIC_DLLP_REQ(x)  VTSS_EXTRACT_BITFIELD(x,0,1)


/** 
 * \brief Lane Skew
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:LANE_SKEW
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_LANE_SKEW  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1c5)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_LANE_SKEW . DISABLE_LANE_TO_LANE_DESKEW
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_LANE_SKEW_DISABLE_LANE_TO_LANE_DESKEW(x)  VTSS_ENCODE_BITFIELD(!!(x),31,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_LANE_SKEW_DISABLE_LANE_TO_LANE_DESKEW  VTSS_BIT(31)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_LANE_SKEW_DISABLE_LANE_TO_LANE_DESKEW(x)  VTSS_EXTRACT_BITFIELD(x,31,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_LANE_SKEW . ACK_NAK_DISABLE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_LANE_SKEW_ACK_NAK_DISABLE(x)  VTSS_ENCODE_BITFIELD(!!(x),25,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_LANE_SKEW_ACK_NAK_DISABLE  VTSS_BIT(25)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_LANE_SKEW_ACK_NAK_DISABLE(x)  VTSS_EXTRACT_BITFIELD(x,25,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_LANE_SKEW . FLOW_CTRL_DISABLE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_LANE_SKEW_FLOW_CTRL_DISABLE(x)  VTSS_ENCODE_BITFIELD(!!(x),24,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_LANE_SKEW_FLOW_CTRL_DISABLE  VTSS_BIT(24)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_LANE_SKEW_FLOW_CTRL_DISABLE(x)  VTSS_EXTRACT_BITFIELD(x,24,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_LANE_SKEW . INSERT_LANE_SKEW
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_LANE_SKEW_INSERT_LANE_SKEW(x)  VTSS_ENCODE_BITFIELD(x,0,24)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_LANE_SKEW_INSERT_LANE_SKEW     VTSS_ENCODE_BITMASK(0,24)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_LANE_SKEW_INSERT_LANE_SKEW(x)  VTSS_EXTRACT_BITFIELD(x,0,24)


/** 
 * \brief Timer Control and Max Function Number
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:TIMER_CTRL_MAX_FUNC_NUM
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_TIMER_CTRL_MAX_FUNC_NUM  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1c6)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_TIMER_CTRL_MAX_FUNC_NUM . UPDATE_FREQ_TIMER
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_TIMER_CTRL_MAX_FUNC_NUM_UPDATE_FREQ_TIMER(x)  VTSS_ENCODE_BITFIELD(x,24,5)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_TIMER_CTRL_MAX_FUNC_NUM_UPDATE_FREQ_TIMER     VTSS_ENCODE_BITMASK(24,5)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_TIMER_CTRL_MAX_FUNC_NUM_UPDATE_FREQ_TIMER(x)  VTSS_EXTRACT_BITFIELD(x,24,5)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_TIMER_CTRL_MAX_FUNC_NUM . TIMER_MOD_ACK_NAK
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_TIMER_CTRL_MAX_FUNC_NUM_TIMER_MOD_ACK_NAK(x)  VTSS_ENCODE_BITFIELD(x,19,5)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_TIMER_CTRL_MAX_FUNC_NUM_TIMER_MOD_ACK_NAK     VTSS_ENCODE_BITMASK(19,5)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_TIMER_CTRL_MAX_FUNC_NUM_TIMER_MOD_ACK_NAK(x)  VTSS_EXTRACT_BITFIELD(x,19,5)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_TIMER_CTRL_MAX_FUNC_NUM . TIMER_MOD_REPLAY_TIMER
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_TIMER_CTRL_MAX_FUNC_NUM_TIMER_MOD_REPLAY_TIMER(x)  VTSS_ENCODE_BITFIELD(x,14,5)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_TIMER_CTRL_MAX_FUNC_NUM_TIMER_MOD_REPLAY_TIMER     VTSS_ENCODE_BITMASK(14,5)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_TIMER_CTRL_MAX_FUNC_NUM_TIMER_MOD_REPLAY_TIMER(x)  VTSS_EXTRACT_BITFIELD(x,14,5)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_TIMER_CTRL_MAX_FUNC_NUM . MAX_FUNC_NUM
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_TIMER_CTRL_MAX_FUNC_NUM_MAX_FUNC_NUM(x)  VTSS_ENCODE_BITFIELD(x,0,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_TIMER_CTRL_MAX_FUNC_NUM_MAX_FUNC_NUM     VTSS_ENCODE_BITMASK(0,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_TIMER_CTRL_MAX_FUNC_NUM_MAX_FUNC_NUM(x)  VTSS_EXTRACT_BITFIELD(x,0,8)


/** 
 * \brief Symbol Timer and Filter Mask 1
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:SYMBOL_TIMER_FILTER_1
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_SYMBOL_TIMER_FILTER_1  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1c7)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_SYMBOL_TIMER_FILTER_1 . MASK_RADM_1
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_SYMBOL_TIMER_FILTER_1_MASK_RADM_1(x)  VTSS_ENCODE_BITFIELD(x,16,16)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_SYMBOL_TIMER_FILTER_1_MASK_RADM_1     VTSS_ENCODE_BITMASK(16,16)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_SYMBOL_TIMER_FILTER_1_MASK_RADM_1(x)  VTSS_EXTRACT_BITFIELD(x,16,16)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_SYMBOL_TIMER_FILTER_1 . DISABLE_FC_WD_TIMER
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_SYMBOL_TIMER_FILTER_1_DISABLE_FC_WD_TIMER(x)  VTSS_ENCODE_BITFIELD(!!(x),15,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_SYMBOL_TIMER_FILTER_1_DISABLE_FC_WD_TIMER  VTSS_BIT(15)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_SYMBOL_TIMER_FILTER_1_DISABLE_FC_WD_TIMER(x)  VTSS_EXTRACT_BITFIELD(x,15,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_SYMBOL_TIMER_FILTER_1 . EIDLE_TIMER
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_SYMBOL_TIMER_FILTER_1_EIDLE_TIMER(x)  VTSS_ENCODE_BITFIELD(x,11,4)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_SYMBOL_TIMER_FILTER_1_EIDLE_TIMER     VTSS_ENCODE_BITMASK(11,4)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_SYMBOL_TIMER_FILTER_1_EIDLE_TIMER(x)  VTSS_EXTRACT_BITFIELD(x,11,4)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_SYMBOL_TIMER_FILTER_1 . SKP_INT_VAL
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_SYMBOL_TIMER_FILTER_1_SKP_INT_VAL(x)  VTSS_ENCODE_BITFIELD(x,0,11)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_SYMBOL_TIMER_FILTER_1_SKP_INT_VAL     VTSS_ENCODE_BITMASK(0,11)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_SYMBOL_TIMER_FILTER_1_SKP_INT_VAL(x)  VTSS_EXTRACT_BITFIELD(x,0,11)


/** 
 * \brief Filter Mask 2
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:FILTER_MASK_REG_2
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_FILTER_MASK_REG_2  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1c8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_FILTER_MASK_REG_2 . MASK_RADM_2
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_FILTER_MASK_REG_2_MASK_RADM_2(x)  (x)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_FILTER_MASK_REG_2_MASK_RADM_2     0xffffffff
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_FILTER_MASK_REG_2_MASK_RADM_2(x)  (x)


/** 
 * \brief Outbound Decomponsed Subrequests Control
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:AMBA_MUL_OB_DECOMP_NP_SUB_REQ_CTRL
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_AMBA_MUL_OB_DECOMP_NP_SUB_REQ_CTRL  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1c9)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_AMBA_MUL_OB_DECOMP_NP_SUB_REQ_CTRL . IB_OB_RD_SPLIT_BURST_EN
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_AMBA_MUL_OB_DECOMP_NP_SUB_REQ_CTRL_IB_OB_RD_SPLIT_BURST_EN(x)  VTSS_ENCODE_BITFIELD(x,0,2)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_AMBA_MUL_OB_DECOMP_NP_SUB_REQ_CTRL_IB_OB_RD_SPLIT_BURST_EN     VTSS_ENCODE_BITMASK(0,2)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_AMBA_MUL_OB_DECOMP_NP_SUB_REQ_CTRL_IB_OB_RD_SPLIT_BURST_EN(x)  VTSS_EXTRACT_BITFIELD(x,0,2)


/** 
 * \brief Debug 0
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:DEBUG_REG_0
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_DEBUG_REG_0  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1ca)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_DEBUG_REG_0 . DEB_REG_0
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_DEBUG_REG_0_DEB_REG_0(x)  (x)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_DEBUG_REG_0_DEB_REG_0     0xffffffff
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_DEBUG_REG_0_DEB_REG_0(x)  (x)


/** 
 * \brief Debug 1
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:DEBUG_REG_1
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_DEBUG_REG_1  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1cb)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_DEBUG_REG_1 . DEB_REG_1
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_DEBUG_REG_1_DEB_REG_1(x)  (x)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_DEBUG_REG_1_DEB_REG_1     0xffffffff
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_DEBUG_REG_1_DEB_REG_1(x)  (x)


/** 
 * \brief Transmit Posted FC Credit Status
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:TX_P_FC_CREDIT_STATUS
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_TX_P_FC_CREDIT_STATUS  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1cc)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_TX_P_FC_CREDIT_STATUS . TX_P_HEADER_FC_CREDIT
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_TX_P_FC_CREDIT_STATUS_TX_P_HEADER_FC_CREDIT(x)  VTSS_ENCODE_BITFIELD(x,12,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_TX_P_FC_CREDIT_STATUS_TX_P_HEADER_FC_CREDIT     VTSS_ENCODE_BITMASK(12,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_TX_P_FC_CREDIT_STATUS_TX_P_HEADER_FC_CREDIT(x)  VTSS_EXTRACT_BITFIELD(x,12,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_TX_P_FC_CREDIT_STATUS . TX_P_DATA_FC_CREDIT
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_TX_P_FC_CREDIT_STATUS_TX_P_DATA_FC_CREDIT(x)  VTSS_ENCODE_BITFIELD(x,0,12)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_TX_P_FC_CREDIT_STATUS_TX_P_DATA_FC_CREDIT     VTSS_ENCODE_BITMASK(0,12)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_TX_P_FC_CREDIT_STATUS_TX_P_DATA_FC_CREDIT(x)  VTSS_EXTRACT_BITFIELD(x,0,12)


/** 
 * \brief Transmit Non-Posted FC Credit Status
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:TX_NP_FC_CREDIT_STATUS
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_TX_NP_FC_CREDIT_STATUS  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1cd)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_TX_NP_FC_CREDIT_STATUS . TX_NP_HEADER_FC_CREDIT
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_TX_NP_FC_CREDIT_STATUS_TX_NP_HEADER_FC_CREDIT(x)  VTSS_ENCODE_BITFIELD(x,12,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_TX_NP_FC_CREDIT_STATUS_TX_NP_HEADER_FC_CREDIT     VTSS_ENCODE_BITMASK(12,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_TX_NP_FC_CREDIT_STATUS_TX_NP_HEADER_FC_CREDIT(x)  VTSS_EXTRACT_BITFIELD(x,12,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_TX_NP_FC_CREDIT_STATUS . TX_NP_DATA_FC_CREDIT
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_TX_NP_FC_CREDIT_STATUS_TX_NP_DATA_FC_CREDIT(x)  VTSS_ENCODE_BITFIELD(x,0,12)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_TX_NP_FC_CREDIT_STATUS_TX_NP_DATA_FC_CREDIT     VTSS_ENCODE_BITMASK(0,12)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_TX_NP_FC_CREDIT_STATUS_TX_NP_DATA_FC_CREDIT(x)  VTSS_EXTRACT_BITFIELD(x,0,12)


/** 
 * \brief Transmit Completion FC Credit Status
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:TX_CPL_FC_CREDIT_STATUS
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_TX_CPL_FC_CREDIT_STATUS  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1ce)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_TX_CPL_FC_CREDIT_STATUS . TX_CPL_HEADER_FC_CREDIT
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_TX_CPL_FC_CREDIT_STATUS_TX_CPL_HEADER_FC_CREDIT(x)  VTSS_ENCODE_BITFIELD(x,12,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_TX_CPL_FC_CREDIT_STATUS_TX_CPL_HEADER_FC_CREDIT     VTSS_ENCODE_BITMASK(12,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_TX_CPL_FC_CREDIT_STATUS_TX_CPL_HEADER_FC_CREDIT(x)  VTSS_EXTRACT_BITFIELD(x,12,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_TX_CPL_FC_CREDIT_STATUS . TX_CPL_DATA_FC_CREDIT
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_TX_CPL_FC_CREDIT_STATUS_TX_CPL_DATA_FC_CREDIT(x)  VTSS_ENCODE_BITFIELD(x,0,12)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_TX_CPL_FC_CREDIT_STATUS_TX_CPL_DATA_FC_CREDIT     VTSS_ENCODE_BITMASK(0,12)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_TX_CPL_FC_CREDIT_STATUS_TX_CPL_DATA_FC_CREDIT(x)  VTSS_EXTRACT_BITFIELD(x,0,12)


/** 
 * \brief Queue Status
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:Q_STATUS
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_Q_STATUS   VTSS_IOREG(VTSS_TO_PCIE_EP,0x1cf)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_Q_STATUS . TIMER_MOD_FLOW_CONTROL_EN
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_Q_STATUS_TIMER_MOD_FLOW_CONTROL_EN(x)  VTSS_ENCODE_BITFIELD(!!(x),31,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_Q_STATUS_TIMER_MOD_FLOW_CONTROL_EN  VTSS_BIT(31)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_Q_STATUS_TIMER_MOD_FLOW_CONTROL_EN(x)  VTSS_EXTRACT_BITFIELD(x,31,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_Q_STATUS . TIMER_MOD_FLOW_CONTROL
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_Q_STATUS_TIMER_MOD_FLOW_CONTROL(x)  VTSS_ENCODE_BITFIELD(x,16,13)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_Q_STATUS_TIMER_MOD_FLOW_CONTROL     VTSS_ENCODE_BITMASK(16,13)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_Q_STATUS_TIMER_MOD_FLOW_CONTROL(x)  VTSS_EXTRACT_BITFIELD(x,16,13)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_Q_STATUS . RX_QUEUE_NON_EMPTY
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_Q_STATUS_RX_QUEUE_NON_EMPTY(x)  VTSS_ENCODE_BITFIELD(!!(x),2,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_Q_STATUS_RX_QUEUE_NON_EMPTY  VTSS_BIT(2)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_Q_STATUS_RX_QUEUE_NON_EMPTY(x)  VTSS_EXTRACT_BITFIELD(x,2,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_Q_STATUS . TX_RETRY_BUFFER_NE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_Q_STATUS_TX_RETRY_BUFFER_NE(x)  VTSS_ENCODE_BITFIELD(!!(x),1,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_Q_STATUS_TX_RETRY_BUFFER_NE  VTSS_BIT(1)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_Q_STATUS_TX_RETRY_BUFFER_NE(x)  VTSS_EXTRACT_BITFIELD(x,1,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_Q_STATUS . RX_TLP_FC_CREDIT_NON_RETURN
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_Q_STATUS_RX_TLP_FC_CREDIT_NON_RETURN(x)  VTSS_ENCODE_BITFIELD(!!(x),0,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_Q_STATUS_RX_TLP_FC_CREDIT_NON_RETURN  VTSS_BIT(0)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_Q_STATUS_RX_TLP_FC_CREDIT_NON_RETURN(x)  VTSS_EXTRACT_BITFIELD(x,0,1)


/** 
 * \brief Transmit Arbitration 1
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:VC_TX_ARBI_REG_1
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_1  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1d0)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_1 . WRR_WEIGHT_VC_3
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_1_WRR_WEIGHT_VC_3(x)  VTSS_ENCODE_BITFIELD(x,24,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_1_WRR_WEIGHT_VC_3     VTSS_ENCODE_BITMASK(24,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_1_WRR_WEIGHT_VC_3(x)  VTSS_EXTRACT_BITFIELD(x,24,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_1 . WRR_WEIGHT_VC_2
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_1_WRR_WEIGHT_VC_2(x)  VTSS_ENCODE_BITFIELD(x,16,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_1_WRR_WEIGHT_VC_2     VTSS_ENCODE_BITMASK(16,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_1_WRR_WEIGHT_VC_2(x)  VTSS_EXTRACT_BITFIELD(x,16,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_1 . WRR_WEIGHT_VC_1
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_1_WRR_WEIGHT_VC_1(x)  VTSS_ENCODE_BITFIELD(x,8,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_1_WRR_WEIGHT_VC_1     VTSS_ENCODE_BITMASK(8,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_1_WRR_WEIGHT_VC_1(x)  VTSS_EXTRACT_BITFIELD(x,8,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_1 . WRR_WEIGHT_VC_0
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_1_WRR_WEIGHT_VC_0(x)  VTSS_ENCODE_BITFIELD(x,0,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_1_WRR_WEIGHT_VC_0     VTSS_ENCODE_BITMASK(0,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_1_WRR_WEIGHT_VC_0(x)  VTSS_EXTRACT_BITFIELD(x,0,8)


/** 
 * \brief Transmit Arbitration 2
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:VC_TX_ARBI_REG_2
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_2  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1d1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_2 . WRR_WEIGHT_VC_7
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_2_WRR_WEIGHT_VC_7(x)  VTSS_ENCODE_BITFIELD(x,24,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_2_WRR_WEIGHT_VC_7     VTSS_ENCODE_BITMASK(24,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_2_WRR_WEIGHT_VC_7(x)  VTSS_EXTRACT_BITFIELD(x,24,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_2 . WRR_WEIGHT_VC_6
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_2_WRR_WEIGHT_VC_6(x)  VTSS_ENCODE_BITFIELD(x,16,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_2_WRR_WEIGHT_VC_6     VTSS_ENCODE_BITMASK(16,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_2_WRR_WEIGHT_VC_6(x)  VTSS_EXTRACT_BITFIELD(x,16,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_2 . WRR_WEIGHT_VC_5
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_2_WRR_WEIGHT_VC_5(x)  VTSS_ENCODE_BITFIELD(x,8,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_2_WRR_WEIGHT_VC_5     VTSS_ENCODE_BITMASK(8,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_2_WRR_WEIGHT_VC_5(x)  VTSS_EXTRACT_BITFIELD(x,8,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_2 . WRR_WEIGHT_VC_4
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_2_WRR_WEIGHT_VC_4(x)  VTSS_ENCODE_BITFIELD(x,0,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_2_WRR_WEIGHT_VC_4     VTSS_ENCODE_BITMASK(0,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC_TX_ARBI_REG_2_WRR_WEIGHT_VC_4(x)  VTSS_EXTRACT_BITFIELD(x,0,8)


/** 
 * \brief Posted Receive Queue Control
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:VC0_P_RX_Q_CTRL
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1d2)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL . VC_ORDERING_RX_Q
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_VC_ORDERING_RX_Q(x)  VTSS_ENCODE_BITFIELD(!!(x),31,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_VC_ORDERING_RX_Q  VTSS_BIT(31)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_VC_ORDERING_RX_Q(x)  VTSS_EXTRACT_BITFIELD(x,31,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL . TLP_TYPE_ORDERING_VC0
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_TLP_TYPE_ORDERING_VC0(x)  VTSS_ENCODE_BITFIELD(!!(x),30,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_TLP_TYPE_ORDERING_VC0  VTSS_BIT(30)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_TLP_TYPE_ORDERING_VC0(x)  VTSS_EXTRACT_BITFIELD(x,30,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL . RESERVED5
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_RESERVED5(x)  VTSS_ENCODE_BITFIELD(x,24,6)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_RESERVED5     VTSS_ENCODE_BITMASK(24,6)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_RESERVED5(x)  VTSS_EXTRACT_BITFIELD(x,24,6)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL . VC0_P_TLP_Q_MODE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_VC0_P_TLP_Q_MODE(x)  VTSS_ENCODE_BITFIELD(x,21,3)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_VC0_P_TLP_Q_MODE     VTSS_ENCODE_BITMASK(21,3)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_VC0_P_TLP_Q_MODE(x)  VTSS_EXTRACT_BITFIELD(x,21,3)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL . RESERVED4
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_RESERVED4(x)  VTSS_ENCODE_BITFIELD(!!(x),20,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_RESERVED4  VTSS_BIT(20)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_RESERVED4(x)  VTSS_EXTRACT_BITFIELD(x,20,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL . VC0_P_HEADER_CREDIT
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_VC0_P_HEADER_CREDIT(x)  VTSS_ENCODE_BITFIELD(x,12,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_VC0_P_HEADER_CREDIT     VTSS_ENCODE_BITMASK(12,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_VC0_P_HEADER_CREDIT(x)  VTSS_EXTRACT_BITFIELD(x,12,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL . VC0_P_DATA_CREDIT
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_VC0_P_DATA_CREDIT(x)  VTSS_ENCODE_BITFIELD(x,0,12)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_VC0_P_DATA_CREDIT     VTSS_ENCODE_BITMASK(0,12)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC0_P_RX_Q_CTRL_VC0_P_DATA_CREDIT(x)  VTSS_EXTRACT_BITFIELD(x,0,12)


/** 
 * \brief Non-Posted Receive Queue Control
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:VC0_NP_RX_Q_CTRL
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1d3)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL . RESERVED7
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL_RESERVED7(x)  VTSS_ENCODE_BITFIELD(x,24,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL_RESERVED7     VTSS_ENCODE_BITMASK(24,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL_RESERVED7(x)  VTSS_EXTRACT_BITFIELD(x,24,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL . VC0_NP_TLP_Q_MODE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL_VC0_NP_TLP_Q_MODE(x)  VTSS_ENCODE_BITFIELD(x,21,3)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL_VC0_NP_TLP_Q_MODE     VTSS_ENCODE_BITMASK(21,3)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL_VC0_NP_TLP_Q_MODE(x)  VTSS_EXTRACT_BITFIELD(x,21,3)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL . RESERVED6
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL_RESERVED6(x)  VTSS_ENCODE_BITFIELD(!!(x),20,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL_RESERVED6  VTSS_BIT(20)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL_RESERVED6(x)  VTSS_EXTRACT_BITFIELD(x,20,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL . VC0_NP_HEADER_CREDIT
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL_VC0_NP_HEADER_CREDIT(x)  VTSS_ENCODE_BITFIELD(x,12,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL_VC0_NP_HEADER_CREDIT     VTSS_ENCODE_BITMASK(12,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL_VC0_NP_HEADER_CREDIT(x)  VTSS_EXTRACT_BITFIELD(x,12,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL . VC0_NP_DATA_CREDIT
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL_VC0_NP_DATA_CREDIT(x)  VTSS_ENCODE_BITFIELD(x,0,12)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL_VC0_NP_DATA_CREDIT     VTSS_ENCODE_BITMASK(0,12)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC0_NP_RX_Q_CTRL_VC0_NP_DATA_CREDIT(x)  VTSS_EXTRACT_BITFIELD(x,0,12)


/** 
 * \brief Completion Receive Queue Control
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:VC0_CPL_RX_Q_CTRL
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL  VTSS_IOREG(VTSS_TO_PCIE_EP,0x1d4)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL . RESERVED9
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL_RESERVED9(x)  VTSS_ENCODE_BITFIELD(x,24,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL_RESERVED9     VTSS_ENCODE_BITMASK(24,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL_RESERVED9(x)  VTSS_EXTRACT_BITFIELD(x,24,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL . VC0_CPL_TLP_Q_MODE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL_VC0_CPL_TLP_Q_MODE(x)  VTSS_ENCODE_BITFIELD(x,21,3)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL_VC0_CPL_TLP_Q_MODE     VTSS_ENCODE_BITMASK(21,3)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL_VC0_CPL_TLP_Q_MODE(x)  VTSS_EXTRACT_BITFIELD(x,21,3)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL . RESERVED8
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL_RESERVED8(x)  VTSS_ENCODE_BITFIELD(!!(x),20,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL_RESERVED8  VTSS_BIT(20)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL_RESERVED8(x)  VTSS_EXTRACT_BITFIELD(x,20,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL . VC0_CPL_HEADER_CREDIT
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL_VC0_CPL_HEADER_CREDIT(x)  VTSS_ENCODE_BITFIELD(x,12,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL_VC0_CPL_HEADER_CREDIT     VTSS_ENCODE_BITMASK(12,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL_VC0_CPL_HEADER_CREDIT(x)  VTSS_EXTRACT_BITFIELD(x,12,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL . VC0_CPL_DATA_CREDIT
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL_VC0_CPL_DATA_CREDIT(x)  VTSS_ENCODE_BITFIELD(x,0,12)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL_VC0_CPL_DATA_CREDIT     VTSS_ENCODE_BITMASK(0,12)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_VC0_CPL_RX_Q_CTRL_VC0_CPL_DATA_CREDIT(x)  VTSS_EXTRACT_BITFIELD(x,0,12)


/** 
 * \brief Link Width and Speed Change Control
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:GEN2_CTRL
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_GEN2_CTRL  VTSS_IOREG(VTSS_TO_PCIE_EP,0x203)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_GEN2_CTRL . GEN1_EI_INFERENCE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_GEN2_CTRL_GEN1_EI_INFERENCE(x)  VTSS_ENCODE_BITFIELD(!!(x),21,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_GEN2_CTRL_GEN1_EI_INFERENCE  VTSS_BIT(21)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_GEN2_CTRL_GEN1_EI_INFERENCE(x)  VTSS_EXTRACT_BITFIELD(x,21,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_GEN2_CTRL . NUM_OF_LANES
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_GEN2_CTRL_NUM_OF_LANES(x)  VTSS_ENCODE_BITFIELD(x,8,9)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_GEN2_CTRL_NUM_OF_LANES     VTSS_ENCODE_BITMASK(8,9)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_GEN2_CTRL_NUM_OF_LANES(x)  VTSS_EXTRACT_BITFIELD(x,8,9)


/** 
 * \brief PHY Status
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:PHY_STATUS
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_PHY_STATUS  VTSS_IOREG(VTSS_TO_PCIE_EP,0x204)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PHY_STATUS . PHY_STATUS
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PHY_STATUS_PHY_STATUS(x)  (x)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PHY_STATUS_PHY_STATUS     0xffffffff
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PHY_STATUS_PHY_STATUS(x)  (x)


/** 
 * \brief PHY Contol
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:PHY_CONTROL
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_PHY_CONTROL  VTSS_IOREG(VTSS_TO_PCIE_EP,0x205)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_PHY_CONTROL . PHY_CONTROL
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_PHY_CONTROL_PHY_CONTROL(x)  (x)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_PHY_CONTROL_PHY_CONTROL     0xffffffff
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_PHY_CONTROL_PHY_CONTROL(x)  (x)


/** 
 * \brief AXI Master Control 0
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:AXI_MASTER_CTRL_REG_0
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_AXI_MASTER_CTRL_REG_0  VTSS_IOREG(VTSS_TO_PCIE_EP,0x206)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_AXI_MASTER_CTRL_REG_0 . REMOTE_MAX_BRIDGE_TAG
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_AXI_MASTER_CTRL_REG_0_REMOTE_MAX_BRIDGE_TAG(x)  VTSS_ENCODE_BITFIELD(x,8,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_AXI_MASTER_CTRL_REG_0_REMOTE_MAX_BRIDGE_TAG     VTSS_ENCODE_BITMASK(8,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_AXI_MASTER_CTRL_REG_0_REMOTE_MAX_BRIDGE_TAG(x)  VTSS_EXTRACT_BITFIELD(x,8,8)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_AXI_MASTER_CTRL_REG_0 . REMOTE_READ_REQ_SIZE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_AXI_MASTER_CTRL_REG_0_REMOTE_READ_REQ_SIZE(x)  VTSS_ENCODE_BITFIELD(x,0,3)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_AXI_MASTER_CTRL_REG_0_REMOTE_READ_REQ_SIZE     VTSS_ENCODE_BITMASK(0,3)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_AXI_MASTER_CTRL_REG_0_REMOTE_READ_REQ_SIZE(x)  VTSS_EXTRACT_BITFIELD(x,0,3)


/** 
 * \brief AXI Master Control 1
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:AXI_MASTER_CTRL_REG_1
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_AXI_MASTER_CTRL_REG_1  VTSS_IOREG(VTSS_TO_PCIE_EP,0x207)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_AXI_MASTER_CTRL_REG_1 . RESIZE_MASTER_RESPONSE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_AXI_MASTER_CTRL_REG_1_RESIZE_MASTER_RESPONSE(x)  VTSS_ENCODE_BITFIELD(!!(x),0,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_AXI_MASTER_CTRL_REG_1_RESIZE_MASTER_RESPONSE  VTSS_BIT(0)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_AXI_MASTER_CTRL_REG_1_RESIZE_MASTER_RESPONSE(x)  VTSS_EXTRACT_BITFIELD(x,0,1)


/** 
 * \brief Misc Control
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:MISC_CONTROL_1
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_MISC_CONTROL_1  VTSS_IOREG(VTSS_TO_PCIE_EP,0x22f)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_MISC_CONTROL_1 . DBI_RO_WR_EN
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_MISC_CONTROL_1_DBI_RO_WR_EN(x)  VTSS_ENCODE_BITFIELD(!!(x),0,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_MISC_CONTROL_1_DBI_RO_WR_EN  VTSS_BIT(0)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_MISC_CONTROL_1_DBI_RO_WR_EN(x)  VTSS_EXTRACT_BITFIELD(x,0,1)


/** 
 * \brief Amba Error Response Default
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:AMBA_ERROR_RESPONSE_DEFAULT
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_AMBA_ERROR_RESPONSE_DEFAULT  VTSS_IOREG(VTSS_TO_PCIE_EP,0x234)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_AMBA_ERROR_RESPONSE_DEFAULT . AMBA_ERROR_RESPONSE_DEFAULT
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_AMBA_ERROR_RESPONSE_DEFAULT_AMBA_ERROR_RESPONSE_DEFAULT(x)  VTSS_ENCODE_BITFIELD(x,0,4)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_AMBA_ERROR_RESPONSE_DEFAULT_AMBA_ERROR_RESPONSE_DEFAULT     VTSS_ENCODE_BITMASK(0,4)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_AMBA_ERROR_RESPONSE_DEFAULT_AMBA_ERROR_RESPONSE_DEFAULT(x)  VTSS_EXTRACT_BITFIELD(x,0,4)


/** 
 * \brief Address translation region
 *
 * \details
 * The address translation unit supports 2 outbound regions. The registers
 * PCIE::ATU_CFG1, PCIE::ATU_CFG2, PCIE::ATU_BASE_ADDR_LOW,
 * PCIE::ATU_BASE_ADDR_HIGH, PCIE::ATU_LIMIT_ADDR, PCIE::ATU_TGT_ADDR_LOW,
 * and PCIE::ATU_TGT_ADDR_HIGH all maps to the currently configured region
 * (as configured in this register).
 *
 * Register: \a PCIE:PCIE_PORT_LOGIC:ATU_REGION
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_ATU_REGION  VTSS_IOREG(VTSS_TO_PCIE_EP,0x240)

/** 
 * \brief
 * Selects either inbound or outbound regions.
 *
 * \details 
 * 0: Outbound.
 * 1: Inbound.
 *
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_REGION . ATU_DIRECTION
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_REGION_ATU_DIRECTION(x)  VTSS_ENCODE_BITFIELD(!!(x),31,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_REGION_ATU_DIRECTION  VTSS_BIT(31)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_REGION_ATU_DIRECTION(x)  VTSS_EXTRACT_BITFIELD(x,31,1)

/** 
 * \brief
 * Selects region index, set to 0 or 1.
 *
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_REGION . ATU_IDX
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_REGION_ATU_IDX(x)  VTSS_ENCODE_BITFIELD(x,0,3)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_REGION_ATU_IDX     VTSS_ENCODE_BITMASK(0,3)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_REGION_ATU_IDX(x)  VTSS_EXTRACT_BITFIELD(x,0,3)


/** 
 * \brief Address translation configuration register 1
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:ATU_CFG1
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_ATU_CFG1   VTSS_IOREG(VTSS_TO_PCIE_EP,0x241)

/** 
 * \brief
 * Must be 0.
 *
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_CFG1 . ATU_FN
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_CFG1_ATU_FN(x)  VTSS_ENCODE_BITFIELD(x,20,5)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_CFG1_ATU_FN     VTSS_ENCODE_BITMASK(20,5)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_CFG1_ATU_FN(x)  VTSS_EXTRACT_BITFIELD(x,20,5)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_CFG1 . ATU_AT
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_CFG1_ATU_AT(x)  VTSS_ENCODE_BITFIELD(x,16,2)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_CFG1_ATU_AT     VTSS_ENCODE_BITMASK(16,2)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_CFG1_ATU_AT(x)  VTSS_EXTRACT_BITFIELD(x,16,2)

/** 
 * \brief
 * When the address of an outbound TLP is matched to this region, then the
 * ATTR field of the TLP is changed to the value in this register.
 *
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_CFG1 . ATU_ATTR
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_CFG1_ATU_ATTR(x)  VTSS_ENCODE_BITFIELD(x,9,2)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_CFG1_ATU_ATTR     VTSS_ENCODE_BITMASK(9,2)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_CFG1_ATU_ATTR(x)  VTSS_EXTRACT_BITFIELD(x,9,2)

/** 
 * \brief
 * When the address of an outbound TLP is matched to this region, then the
 * TD field of the TLP is changed to the value in this register.
 *
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_CFG1 . ATU_TD
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_CFG1_ATU_TD(x)  VTSS_ENCODE_BITFIELD(!!(x),8,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_CFG1_ATU_TD  VTSS_BIT(8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_CFG1_ATU_TD(x)  VTSS_EXTRACT_BITFIELD(x,8,1)

/** 
 * \brief
 * When the address of an outbound TLP is matched to this region, then the
 * TC field of the TLP is changed to the value in this register.
 *
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_CFG1 . ATU_TC
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_CFG1_ATU_TC(x)  VTSS_ENCODE_BITFIELD(x,5,3)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_CFG1_ATU_TC     VTSS_ENCODE_BITMASK(5,3)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_CFG1_ATU_TC(x)  VTSS_EXTRACT_BITFIELD(x,5,3)

/** 
 * \brief
 * When the address of an outbound TLP is matched to this region, then the
 * TYPE field of the TLP is changed to the value in this register.
 *
 * \details 
 * 0: MRd/MWr
 * 1: MRdLk
 * 2: IORd/IOWr
 * 4: CfgRd0/CfgWr0
 * 5: CfgRd1/CfgWr1
 * 16-23: Msg/MsgD
 *
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_CFG1 . ATU_TYPE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_CFG1_ATU_TYPE(x)  VTSS_ENCODE_BITFIELD(x,0,5)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_CFG1_ATU_TYPE     VTSS_ENCODE_BITMASK(0,5)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_CFG1_ATU_TYPE(x)  VTSS_EXTRACT_BITFIELD(x,0,5)


/** 
 * \brief Address translation configuration register 2
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:ATU_CFG2
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_ATU_CFG2   VTSS_IOREG(VTSS_TO_PCIE_EP,0x242)

/** 
 * \brief
 * This bit must be set for address translation to take place.
 *
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_CFG2 . ATU_REGION_ENA
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_CFG2_ATU_REGION_ENA(x)  VTSS_ENCODE_BITFIELD(!!(x),31,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_CFG2_ATU_REGION_ENA  VTSS_BIT(31)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_CFG2_ATU_REGION_ENA(x)  VTSS_EXTRACT_BITFIELD(x,31,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_CFG2 . ATU_INVERT_ENA
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_CFG2_ATU_INVERT_ENA(x)  VTSS_ENCODE_BITFIELD(!!(x),29,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_CFG2_ATU_INVERT_ENA  VTSS_BIT(29)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_CFG2_ATU_INVERT_ENA(x)  VTSS_EXTRACT_BITFIELD(x,29,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_CFG2 . ATU_CFG_SHIFT_ENA
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_CFG2_ATU_CFG_SHIFT_ENA(x)  VTSS_ENCODE_BITFIELD(!!(x),28,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_CFG2_ATU_CFG_SHIFT_ENA  VTSS_BIT(28)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_CFG2_ATU_CFG_SHIFT_ENA(x)  VTSS_EXTRACT_BITFIELD(x,28,1)

/** 
 * \brief
 * Must be 0.
 *
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_CFG2 . ATU_FN_MATCH_ENA
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_CFG2_ATU_FN_MATCH_ENA(x)  VTSS_ENCODE_BITFIELD(!!(x),19,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_CFG2_ATU_FN_MATCH_ENA  VTSS_BIT(19)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_CFG2_ATU_FN_MATCH_ENA(x)  VTSS_EXTRACT_BITFIELD(x,19,1)

/** 
 * \brief
 * When the address of an outbound TLP is matched to this region, and the
 * translated TLP TYPE field is Msg or MsgD; then the Message field of the
 * TLP is changed to the value in this register.
 *
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_CFG2 . ATU_MSG_CODE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_CFG2_ATU_MSG_CODE(x)  VTSS_ENCODE_BITFIELD(x,0,8)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_CFG2_ATU_MSG_CODE     VTSS_ENCODE_BITMASK(0,8)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_CFG2_ATU_MSG_CODE(x)  VTSS_EXTRACT_BITFIELD(x,0,8)


/** 
 * \brief Address translation lower base address
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:ATU_BASE_ADDR_LOW
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_ATU_BASE_ADDR_LOW  VTSS_IOREG(VTSS_TO_PCIE_EP,0x243)

/** 
 * \brief
 * Bits 31:16 of the starting address of the address region to be
 * translated.
 *
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_BASE_ADDR_LOW . ATU_BASE_ADDR_LOW
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_BASE_ADDR_LOW_ATU_BASE_ADDR_LOW(x)  VTSS_ENCODE_BITFIELD(x,16,16)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_BASE_ADDR_LOW_ATU_BASE_ADDR_LOW     VTSS_ENCODE_BITMASK(16,16)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_BASE_ADDR_LOW_ATU_BASE_ADDR_LOW(x)  VTSS_EXTRACT_BITFIELD(x,16,16)


/** 
 * \brief Address translation upper base address
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:ATU_BASE_ADDR_HIGH
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_ATU_BASE_ADDR_HIGH  VTSS_IOREG(VTSS_TO_PCIE_EP,0x244)

/** 
 * \brief
 * Outbound: Not used.
 * Inbound: Bits 63:32 of the starting address of the address region to be
 * translated.
 *
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_BASE_ADDR_HIGH . ATU_BASE_ADDR_HIGH
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_BASE_ADDR_HIGH_ATU_BASE_ADDR_HIGH(x)  (x)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_BASE_ADDR_HIGH_ATU_BASE_ADDR_HIGH     0xffffffff
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_BASE_ADDR_HIGH_ATU_BASE_ADDR_HIGH(x)  (x)


/** 
 * \brief Address translation limit address
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:ATU_LIMIT_ADDR
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_ATU_LIMIT_ADDR  VTSS_IOREG(VTSS_TO_PCIE_EP,0x245)

/** 
 * \brief
 * Bits 31:16 of the ending address of the address region to be translated.
 *
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_LIMIT_ADDR . ATU_LIMIT_ADDR
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_LIMIT_ADDR_ATU_LIMIT_ADDR(x)  VTSS_ENCODE_BITFIELD(x,16,16)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_LIMIT_ADDR_ATU_LIMIT_ADDR     VTSS_ENCODE_BITMASK(16,16)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_LIMIT_ADDR_ATU_LIMIT_ADDR(x)  VTSS_EXTRACT_BITFIELD(x,16,16)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_LIMIT_ADDR . RESERVED_3
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_LIMIT_ADDR_RESERVED_3(x)  VTSS_ENCODE_BITFIELD(x,0,16)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_LIMIT_ADDR_RESERVED_3     VTSS_ENCODE_BITMASK(0,16)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_LIMIT_ADDR_RESERVED_3(x)  VTSS_EXTRACT_BITFIELD(x,0,16)


/** 
 * \brief Address translation lower target address
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:ATU_TGT_ADDR_LOW
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_ATU_TGT_ADDR_LOW  VTSS_IOREG(VTSS_TO_PCIE_EP,0x246)

/** 
 * \brief
 * Bits 31:16 of the new address of the translated region.
 *
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_TGT_ADDR_LOW . ATU_TGT_ADDR_LOW
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_TGT_ADDR_LOW_ATU_TGT_ADDR_LOW(x)  VTSS_ENCODE_BITFIELD(x,16,16)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_TGT_ADDR_LOW_ATU_TGT_ADDR_LOW     VTSS_ENCODE_BITMASK(16,16)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_TGT_ADDR_LOW_ATU_TGT_ADDR_LOW(x)  VTSS_EXTRACT_BITFIELD(x,16,16)


/** 
 * \brief Address translation upper target address
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:ATU_TGT_ADDR_HIGH
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_ATU_TGT_ADDR_HIGH  VTSS_IOREG(VTSS_TO_PCIE_EP,0x247)

/** 
 * \brief
 * Bits 63:32 of the new address of the translated region.
 * Set to 0 to force new address into 32bit PCIe memory space.
 *
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_TGT_ADDR_HIGH . ATU_TGT_ADDR_HIGH
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_TGT_ADDR_HIGH_ATU_TGT_ADDR_HIGH(x)  (x)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_TGT_ADDR_HIGH_ATU_TGT_ADDR_HIGH     0xffffffff
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_TGT_ADDR_HIGH_ATU_TGT_ADDR_HIGH(x)  (x)


/** 
 * \brief Address translation configuration register 3
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:ATU_CFG3
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_ATU_CFG3   VTSS_IOREG(VTSS_TO_PCIE_EP,0x248)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_CFG3 . VF_ACTIVE
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_CFG3_VF_ACTIVE(x)  VTSS_ENCODE_BITFIELD(!!(x),31,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_CFG3_VF_ACTIVE  VTSS_BIT(31)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_CFG3_VF_ACTIVE(x)  VTSS_EXTRACT_BITFIELD(x,31,1)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_ATU_CFG3 . VF_NUMBER
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_ATU_CFG3_VF_NUMBER(x)  VTSS_ENCODE_BITFIELD(!!(x),0,1)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_ATU_CFG3_VF_NUMBER  VTSS_BIT(0)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_ATU_CFG3_VF_NUMBER(x)  VTSS_EXTRACT_BITFIELD(x,0,1)


/** 
 * \brief Auxiliary Clock Frequency
 *
 * \details
 * Register: \a PCIE:PCIE_PORT_LOGIC:AUX_CLK_FREQ
 */
#define VTSS_PCIE_PCIE_PORT_LOGIC_AUX_CLK_FREQ  VTSS_IOREG(VTSS_TO_PCIE_EP,0x2d0)

/** 
 * \details 
 * Field: ::VTSS_PCIE_PCIE_PORT_LOGIC_AUX_CLK_FREQ . AUX_CLK_FREQ
 */
#define  VTSS_F_PCIE_PCIE_PORT_LOGIC_AUX_CLK_FREQ_AUX_CLK_FREQ(x)  VTSS_ENCODE_BITFIELD(x,0,10)
#define  VTSS_M_PCIE_PCIE_PORT_LOGIC_AUX_CLK_FREQ_AUX_CLK_FREQ     VTSS_ENCODE_BITMASK(0,10)
#define  VTSS_X_PCIE_PCIE_PORT_LOGIC_AUX_CLK_FREQ_AUX_CLK_FREQ(x)  VTSS_EXTRACT_BITFIELD(x,0,10)


#endif /* _VTSS_OCELOT_REGS_PCIE_H_ */
